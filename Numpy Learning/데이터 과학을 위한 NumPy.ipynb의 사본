{"cells":[{"cell_type":"markdown","metadata":{"id":"XOmhYVEwXIcH"},"source":["![alt text](https://lh3.googleusercontent.com/jS2nj0Ju7rvJJangnpFrnveoLlMAVc-Ee-k38WW3bRT1rpOooDKa8c3Uh2hZs5j6-XNc1ZFry07GtQTX8sYRpyZGgz8TZuBpGw75pAZqSKQRSfKA0Isy3I-222AHDlZa1WNAvFGmQLfeR4S96qK3agRN-br82Od1243W4uVZbFmbkZPykYy4_qDeE2UrbT1nVr8QZccLXjjtjiJRM8WQ_8eZFSRUBP1BMQg5AG6l7tdGXuWlQDmqFOFcDcEQE5ZX30N7TIcDSOiMWjp0gGZgtMfaR983h4NP8dUp-ej-Vo1D4FSpa_zTpjvKRrpbfnVir1LpIw0yC9OjD7aCMtLcul9Npe-voMkiJgz5XNvFatCgq5WmfcoaDDvkkEQZgp7LQoOqqprzvdItdiyWagMtCVQONtypoZhc2kQQkfav2M0sC9kG4AXDJ6nOlpi8iSbJSVVPKHN9wzGzN1gxo2dDtaua9VfHd5MTOWiRV6ArL6pzwzSzAPSAgUFZZhc4RHGzk5ChHsJBaO3gzvn8GF4Cr7P7GahgXEhw98u1Z0VlNqDmp37B4cUHm5dujBm7jQXGTvPqM5zuDHwiviFId6OMjcjW6xZNckM9_KM8opmUYN_RKP-YPs51qrz9NVksS73JOhHpBHtVQMDCFycT6ZSKv-zdwZN7_FW7=w2160-h856-no)"]},{"cell_type":"markdown","metadata":{"id":"6cMgoMfCa04s"},"source":["# 들어가며"]},{"cell_type":"markdown","metadata":{"id":"RbbfuWbnYG4p"},"source":["## Google Colab 사용 방법"]},{"cell_type":"markdown","metadata":{"id":"N-19yBZf9p0X"},"source":["- 방향키 ↑↓: 셀 간 이동\n","- Enter: 편집모드\n","- Ctrl + Enter: 셀 실행\n","- Shift + Enter: 셀 실행 + 다음 셀 선택\n","\n","---\n","\n","- Ctrl +M D: 셀 삭제\n","- Ctrl + M K: 셀 위로 이동\n","- Ctrl + M J: 셀 아래로 이동"]},{"cell_type":"markdown","metadata":{"id":"lzIDPJDeUOjE"},"source":["# NumPy의 존재 이유\n"]},{"cell_type":"markdown","metadata":{"id":"ph6QEFZ7hH7n"},"source":["![alt text](https://lh3.googleusercontent.com/AP7oMf3hAk2jjhu_cHRNZ6JHxjOZ9FOtthMkSw_wPoRBgSuroW8s4BhP5vAeOrMoBlc7fTeX79ItwpWn5Wmek4wunewkSVe_emEmmFxJUlFbM-a4mFE06ghc5dmpsa9pIRbXQbadTpnOYw9lY9Ujr-UKp5rqi_-IUEh7SFUoWhcGv2ch60Kz3u1j0TWukwW4xCOXd85gkesdMHsaMo_qllLu1mzWeIrABxeASD3n8RuWyiETGJruH5mpiq0X7PkprxJkbwTmaOfwQTolZp64xW05yvXb2xEN_dJuHaWvhCdX05RVcqjw6JjWrqnmLKSwYKgHUy-l4yXBgsZFSh0Vi-di4-DB4e5LxNJa_9ykJuC9sr_msdeub6EMBJnvwziHIkdqwmfUUEl13EHFpkbt2AsJVeSj-ctJTUIxGCx1kD2OPA0VID_BTNpJDBXH1RtMC8JoRysIClD4NVL0tSh96R0ZownNqE8FZlextg86VQuhP7_CRSFtuEdzD5I0SxHDqPWhHzA9Okb5gmDwBykEf55jla53ta1thdxwKG8uJAm9ksW0lnsmG7HcA0l6UJibRJVhnf4-jEmJ_0CvCQ61rf0lbP_-bJOGOy3HZP5NrqOfVbJvX0Ey9UYURK1H7XuhDdydyTi4JY_V-7htYv7RxKUTED5Bd7R1WiQnCIYwbrDPbTyR6KHZgO7ydMp37hOlr9Fw745ASonaxuyPA2XTdRSCXg=w708-h371-no)\n","\n","NumPy는 Pandas, Scikit-learn, Tensorflow등 데이터 사이언스 분야에서 사용되는 라이브러리들의 토대가 되는 라이브러리입니다. NumPy 그 자체로는 높은 수준의 데이터 분석 기능을 제공하지 않지만 NumPy를 활용해 데이터를 Python상에서 표현하고 다룰 줄 알아야만 데이터 분석이라는 그 이후 단계로 나아갈 수 있습니다.\n","\n","이번 강의에서는 데이터 분석의 토대가 될 NumPy의 기본 기능들과 더 빠르고 효율적인 연산을 위한 NumPy 활용법들을 다룰 예정입니다."]},{"cell_type":"markdown","metadata":{"id":"-532MytnX9MS"},"source":["## 데이터 과학에서 다차원 배열의 필요성"]},{"cell_type":"markdown","metadata":{"id":"-Q-jtnLMzU_E"},"source":["### 숫자 자료형"]},{"cell_type":"markdown","metadata":{"id":"3dM8Kpc6ieIl"},"source":["파이썬에서는 데이터를 숫자형 변수에 저장할 수 있습니다.\n","\n","세명의 학생들로 이루어진 반이 있고 이 학생들의 수학점수를 각각의 **숫자형 변수**에 저장하는 경우 아래처럼 처리할 수 있습니다."]},{"cell_type":"code","execution_count":1,"metadata":{"id":"uBPH_VzffLcT","executionInfo":{"status":"ok","timestamp":1716805885183,"user_tz":-540,"elapsed":28,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["MathScore1 = 11\n","MathScore2 = 12\n","MathScore3 = 13"]},{"cell_type":"markdown","metadata":{"id":"8S69KSR0k-Ua"},"source":["점수들의 합과, 평균은 아래처럼 구할 수 있습니다."]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":27,"status":"ok","timestamp":1716805885183,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"17qPqrBJfU5o","outputId":"6b152b0e-a577-4741-e3c5-d4f00c1fdc0f"},"outputs":[{"output_type":"stream","name":"stdout","text":["수학점수 합: 36\n","수학점수 평균: 12.0\n"]}],"source":["MathScoreSum = MathScore1 + MathScore2 + MathScore3\n","MathScoreAverage = MathScoreSum/3\n","\n","print(\"수학점수 합: {}\".format(MathScoreSum))\n","print(\"수학점수 평균: {}\".format(MathScoreAverage))"]},{"cell_type":"markdown","metadata":{"id":"28PfXZzYmkwo"},"source":["만약 새로운 학생이 전학을 와서 시험을 쳤고 이 학생의 성적을 추가한 점수들의 합과 평균을 구하려면 어떻게 해야 할까요?\n","\n","새로운 변수를 추가해야 합니다."]},{"cell_type":"code","execution_count":3,"metadata":{"id":"qdzLb2iPm41S","executionInfo":{"status":"ok","timestamp":1716805885184,"user_tz":-540,"elapsed":27,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["MathScore4 = 14"]},{"cell_type":"markdown","metadata":{"id":"xS6-rRa7m83D"},"source":["그리고 합과 평균을 구하는 코드 역시 수정해야합니다."]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":27,"status":"ok","timestamp":1716805885184,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"LLsJ9qawm7vA","outputId":"ceb8720a-b9e4-4dfd-acf4-b776be0386fd"},"outputs":[{"output_type":"stream","name":"stdout","text":["수학점수 합: 50\n","수학점수 평균: 12.5\n"]}],"source":["MathScoreSum = MathScore1 + MathScore2 + MathScore3 + MathScore4  # 추가된 MathScore4를 합 구할때 고려\n","MathScoreAverage = MathScoreSum/4                                 # 수정: 분모를 3에서 4로 수정\n","\n","print(\"수학점수 합: {}\".format(MathScoreSum))\n","print(\"수학점수 평균: {}\".format(MathScoreAverage))"]},{"cell_type":"markdown","metadata":{"id":"ojfCyAcWzZvz"},"source":["### 리스트 자료형"]},{"cell_type":"markdown","metadata":{"id":"G5_DhNL4o3Fs"},"source":["추가된 데이터를 새로 선언해 주는것은 어쩔수 없다 하더라도 합과 평균을 구하는 코드를 매번 변경하는건 비효율적인 일입니다."]},{"cell_type":"markdown","metadata":{"id":"YndLMp1Zznur"},"source":["리스트 자료형에 데이터를 저장하면 이 문제를 해결할 수 있습니다.\n","\n","다섯명의 학생들로 이루어진 반이 있고 이 학생들의 수학점수를 **리스트**에 저장하는 경우 아래처럼 처리할 수 있습니다."]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":25,"status":"ok","timestamp":1716805885184,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"RkZXCTbMyvDz","outputId":"d6ad7cf0-8c4c-49b4-e267-a72686bc0796"},"outputs":[{"output_type":"stream","name":"stdout","text":["[11, 12, 13]\n"]}],"source":["MathScoreList = [11, 12, 13]\n","\n","print(MathScoreList)"]},{"cell_type":"markdown","metadata":{"id":"arCJlQ3J0RY5"},"source":["점수들의 합과, 평균은 아래처럼 구할 수 있습니다."]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":24,"status":"ok","timestamp":1716805885184,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"0nfV0KGFfU3a","outputId":"90470dbd-3f57-4fc2-a44a-049587a5fcb9"},"outputs":[{"output_type":"stream","name":"stdout","text":["수학점수 합: 36\n","수학점수 평균: 12.0\n"]}],"source":["listMathScoreSum = 0      # 변수 선언&초기화\n","listMathScoreAverage = 0  # 변수 선언&초기화\n","\n","for e in MathScoreList:\n","  listMathScoreSum += e   # listMathScoreSum = listMathScoreSum + e 와 동일한 코드\n","\n","listMathScoreAverage = listMathScoreSum / len(MathScoreList)\n","\n","print(\"수학점수 합: {}\".format(listMathScoreSum))\n","print(\"수학점수 평균: {}\".format(listMathScoreAverage))"]},{"cell_type":"markdown","metadata":{"id":"iyULeL49s1o3"},"source":["만약 새로운 학생이 전학을 와서 시험을 쳤고 이 학생의 성적을 추가한 점수들의 합과 평균을 구하려면 어떻게 해야 할까요?\n","\n","~~새로운 변수를 추가해야 합니다.~~\n","\n","기존의 리스트에 새로운 데이터를 추가하면 됩니다."]},{"cell_type":"code","execution_count":7,"metadata":{"id":"XLU6-OJO02Pq","executionInfo":{"status":"ok","timestamp":1716805885184,"user_tz":-540,"elapsed":22,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["# append: list의 끝에 요소를 추가할 때 사용하는 메서드\n","MathScoreList.append(14)  # 데이터 추가"]},{"cell_type":"markdown","metadata":{"id":"WwlsHrpO06-B"},"source":["~~그리고 합과 평균을 구하는 코드 역시 수정해야합니다.~~\n","\n","새로운 데이터가 추가되더라도 평균과 합을 구하는 **코드는 수정 없이 그대로 사용할 수 있습니다**."]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22,"status":"ok","timestamp":1716805885184,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"hZ9b6Es8fU1Q","outputId":"a62c26f8-80e1-445e-8edb-c15174d973da"},"outputs":[{"output_type":"stream","name":"stdout","text":["수학점수 합: 50\n","수학점수 평균: 12.5\n"]}],"source":["listMathScoreSum = 0      # 변수 선언&초기화\n","listMathScoreAverage = 0  # 변수 선언&초기화\n","\n","for e in MathScoreList:\n","  listMathScoreSum += e   # listMathScoreSum = listMathScoreSum + e 와 동일한 코드\n","\n","listMathScoreAverage = listMathScoreSum / len(MathScoreList)\n","\n","print(\"수학점수 합: {}\".format(listMathScoreSum))\n","print(\"수학점수 평균: {}\".format(listMathScoreAverage))"]},{"cell_type":"markdown","metadata":{"id":"HaiPjaN4lgr0"},"source":["만약 시험문제의 오류가 발견되어 모두 정답처리를 해 모든 학생의 점수를 1점씩 올려줘야 하는 상황에서는 어떻게 해야할까요?\n","\n","반복문이나 List comprehension같은 방법이 있습니다."]},{"cell_type":"markdown","metadata":{"id":"gwRCBixOvF4R"},"source":["**반복문**"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20,"status":"ok","timestamp":1716805885184,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"DWLrwbYJvF4J","outputId":"d051ad1c-26a2-454b-e669-c033e856baa1"},"outputs":[{"output_type":"stream","name":"stdout","text":["[12, 13, 14, 15]\n"]}],"source":["MathScoreList2 = []\n","for e in MathScoreList:\n","  MathScoreList2.append(e+1)\n","\n","\n","print(MathScoreList2)"]},{"cell_type":"markdown","metadata":{"id":"JhKvljj4nxEh"},"source":["**List Comprehension**"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20,"status":"ok","timestamp":1716805885185,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"5eViBzeRjmxp","outputId":"9f87e658-3d74-4a67-e739-e67bc8392c1d"},"outputs":[{"output_type":"stream","name":"stdout","text":["[12, 13, 14, 15]\n"]}],"source":["MathScoreList3 = [e +1 for e in MathScoreList]\n","\n","print(MathScoreList3)"]},{"cell_type":"markdown","metadata":{"id":"fx6d-Cq8X9HP"},"source":["## 파이썬 기본 자료형으로 구현한 다차원 배열"]},{"cell_type":"markdown","metadata":{"id":"z-7ZLOVbu798"},"source":["#### Nested List (중첩 리스트)"]},{"cell_type":"markdown","metadata":{"id":"C-611O6VyZek"},"source":["1반의 점수가 11, 12, 13\n","\n","2반의 점수가 21, 22, 23\n","\n","3반의 점수가 31, 32, 33점이라고 한다면,\n","\n","리스트 안에 리스트를 넣어 위 데이터를 아래처럼 나타낼 수 있습니다."]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":19,"status":"ok","timestamp":1716805885185,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"MZU0pOw4u48h","outputId":"d89d1476-40c4-49de-c0d6-9eaa09b8045d"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[11, 12, 13], [21, 22, 23], [31, 32, 33]]\n"]}],"source":["MathScoreNestedList = [[11, 12, 13], [21, 22, 23], [31, 32, 33]]\n","\n","print(MathScoreNestedList)"]},{"cell_type":"markdown","metadata":{"id":"Lc76UfCXvO06"},"source":["<p class=\"aligncenter\">\n","    <img src=\"https://lh3.googleusercontent.com/pQw2wvQVpsV40t7Uk6O-iNMwVX0GUesvvA-snrEVl1lGWeRsrDjU-2YlkO0jlW7XFMmQNVQchD1XM4sbWVSPtTWjvSc50mY2iuFKNYc72N-rSvymejq4dCpuG4WeheZ2M4tqkJzO37xcujHDe4MJNc0URISUgTXt2452rMh2wDrCVKOa0Ywh85x3cqL9IRYJxjUm0yKmjtCTJhDSXZVEXvnc1RtQoLJzviQsSp6yDdHrA7UwZNBzgMQc3_ol7PUREYY3tLXTXs0_eA-XaJ_J0ONIk2xUnW4B_erXbjeA-UDXFg76BXSmq0CHmcmIewz__z7QI8W7XMS-p087h2mvgxHQFC9tOE2SKQl8oLHFKPm5QrViTs1vrH6sHSYfVoEnJ4XHtV4GPEU0gRco2aYF6x7lfM6I_FGDG0Xm1lncuZUxJ6ger9CF5KB0t881bJbnAvx3WdpPNPw23uG2CqqcadZ5phhvLhh7UDT_kmvq9p04w2E1OTRGxnpljA0qppfFIAAB9wcKdD7cJW48cYjoFTnxKxRaIJYATgquEQ7uzLXsmMu_JeWQpe7gjPlc0lTzguOYp5Rn0vLRxeYZhsN2rwO-g_9XBgZ5_smxUuVYLQeujJvJL41NwOkLtWHWe-r1B449P7Y2Y1uktbd0v5xDRPsde4MynOh3TJWUVw8S2bTP82giPHRryz3l3NRfMaxAJ-fgEggmJV7RNelOAnKYIXnNLA=w1124-h422-no\" alt=\"centered image\"  width=\"400\" height=\"200\">\n","</p>\n","\n","> (source: https://cognitiveclass.ai/blog/nested-lists-multidimensional-numpy-arrays/)"]},{"cell_type":"markdown","metadata":{"id":"bJJJv6tHz0FA"},"source":["각 원소에 1을 더하는 코드는 아래와 같습니다."]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1716805885185,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"NuyFbrDWyzRH","outputId":"c90fe36e-31be-4fac-f15b-63aad9e1bbe6"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[12, 13, 14], [22, 23, 24], [32, 33, 34]]\n"]}],"source":["MathScoreNestedList2 = []\n","\n","for list in MathScoreNestedList:\n","  tempList = []\n","\n","  for e in list:\n","    tempList.append(e+1)\n","\n","  MathScoreNestedList2.append(tempList)\n","\n","\n","print(MathScoreNestedList2)"]},{"cell_type":"markdown","metadata":{"id":"Ggk9YaVCEeQk"},"source":["#### 문제점\n","\n","1차원에서 2차원으로 데이터의 차원이 증가하니 반복문도 하나 더 사용해야 합니다.\n","\n","데이터의 차원이 증가할수록 코드는 복잡해질 수밖에 없습니다."]},{"cell_type":"markdown","metadata":{"id":"KyRVZiGsX8-d"},"source":["## NumPy로 구현한 다차원 배열"]},{"cell_type":"markdown","metadata":{"id":"VAJJqz6Gx-LD"},"source":["**NumPy**를 사용하면 다차원배열을 효율적으로 다룰 수 있습니다.\n","\n","`import numpy as np` 형태로 import하는게 일반적입니다."]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1716805885185,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"oWA0-ULoyHe2","outputId":"48a9a82f-a502-49ca-e8ef-4b4f61949525"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[11 12 13]\n"," [21 22 23]\n"," [31 32 33]]\n"]}],"source":["import numpy as np\n","\n","mathScoreNdarray = np.array(MathScoreNestedList)\n","# mathScoreNdarray = np.array([[11, 12, 13], [21, 22, 23], [31, 32, 33]])\n","\n","print(mathScoreNdarray)"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1716805885185,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"eBOJNzZzci-R","outputId":"bb275625-413d-47e2-bfb4-40b3a3eff617"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[11, 12, 13],\n","       [21, 22, 23],\n","       [31, 32, 33]])"]},"metadata":{},"execution_count":14}],"source":["mathScoreNdarray"]},{"cell_type":"markdown","metadata":{"id":"lgl_tzgkC7Zt"},"source":["각 원소에 1을 더하려면"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1716805885185,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"d3fecKmbyjVJ","outputId":"880649bb-da26-490d-99cd-d168ea908f33"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[12, 13, 14],\n","       [22, 23, 24],\n","       [32, 33, 34]])"]},"metadata":{},"execution_count":15}],"source":["mathScoreNdarray + 1 # 이것이 바로 브로드캐스팅! 후반부에 다룰 예정입니다."]},{"cell_type":"markdown","metadata":{"id":"0tvgQrXOC-U9"},"source":["NumPy에 구현된 메서드를 활용해 합이나 평균도 쉽게 구할 수 있습니다."]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1716805885185,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"ZSoke9ZuGTO9","outputId":"aaeb0a58-770e-4442-baeb-53a51606a35f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["198"]},"metadata":{},"execution_count":16}],"source":["# 전체 합 구하기\n","np.sum(mathScoreNdarray)"]},{"cell_type":"code","execution_count":17,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1716805885185,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"io9nIHuLDAYn","outputId":"dd8db75a-610b-40c3-ede8-f405c90c1766"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["22.0"]},"metadata":{},"execution_count":17}],"source":["# 전체 평균 구하기\n","np.mean(mathScoreNdarray)"]},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1716805885185,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"rmXOPrigDJQN","outputId":"322b017b-bf06-484d-8025-1b0fccbe50ce"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([21., 22., 23.])"]},"metadata":{},"execution_count":18}],"source":["# 열의 평균 구하기\n","np.mean(mathScoreNdarray, axis=0) # axis = 0 -> 열"]},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1716805885185,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"oi3vpqc9DJEL","outputId":"1e5bbbd3-eb2f-4ae3-d3df-934c790ec944"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([12., 22., 32.])"]},"metadata":{},"execution_count":19}],"source":["# 행의 평균 구하기\n","np.mean(mathScoreNdarray, axis=1) # axis = 1 -> 행"]},{"cell_type":"markdown","metadata":{"id":"WO1oIiOgX83Z"},"source":["## 파이썬 기본 자료형과 넘파이 비교"]},{"cell_type":"markdown","metadata":{"id":"ZsvICvfxa3vR"},"source":["### Helper class"]},{"cell_type":"markdown","metadata":{"id":"JPq9Zh8Ekg9n"},"source":["#### 정의\n","\n"]},{"cell_type":"code","execution_count":20,"metadata":{"cellView":"code","id":"cxDX7HUYZ3GC","executionInfo":{"status":"ok","timestamp":1716805885186,"user_tz":-540,"elapsed":7,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["# 이해하지 않아도 됩니다. NumPy 강의와 무관하며 시간을 측정하기 위한 클래스 입니다.\n","import time\n","class Timer(object):\n","    def __init__(self, name=None):\n","        self.name = name\n","\n","    def __enter__(self):\n","        self.tstart = time.time()\n","\n","    def __exit__(self, type, value, traceback):\n","        if self.name:\n","            print('[%s]' % self.name)\n","        print('Elapsed: %s' % (time.time() - self.tstart))\n"]},{"cell_type":"markdown","metadata":{"id":"bCgr99-nklgF"},"source":["#### 사용법"]},{"cell_type":"code","execution_count":21,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":387,"status":"ok","timestamp":1716805885566,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"8gt-EEnbaKPh","outputId":"1190c2bb-68f5-450a-d2ab-2c9576b9d2f0"},"outputs":[{"output_type":"stream","name":"stdout","text":["[여기에 이름을 입력하세요]\n","Elapsed: 1.0016810894012451\n"]}],"source":["with Timer('여기에 이름을 입력하세요'):\n","   # 아래에 시간측정을 하고자 하는 코드를 입력하세요.\n","  time.sleep(1)"]},{"cell_type":"markdown","metadata":{"id":"hF_Smb1tbYoU"},"source":["### 비교"]},{"cell_type":"code","execution_count":22,"metadata":{"cellView":"both","id":"gTrzJCePGKG2","executionInfo":{"status":"ok","timestamp":1716805885566,"user_tz":-540,"elapsed":8,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["# 크기가 100개 이내인 경우 NumPy는 순수 파이썬 구현 보다도 오히려 낮은 성능을 보이는 경향이 있습니다.\n","\n","# rows ,cols가 2일떄 아래 타이머코드를 실행해 보고 rows, cols를 1000으로 바꾼 뒤 다시 코드를 실행 해 보세요.\n","# 차이를 볼 수 있습니다.\n","rows = 2 # 행\n","cols = 2  # 열\n","sampleRand2Darray = np.random.rand(rows, cols)  # ndarry 선언\n","sampleRand2Dlist = sampleRand2Darray.tolist()   # nested list 선언"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1716805885566,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"O0q9eIhjGn7f","outputId":"f9dfa6a4-5cf2-4f9f-8f05-58bb7cec9e2a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.86247087, 0.56222233],\n","       [0.8452104 , 0.36525662]])"]},"metadata":{},"execution_count":23}],"source":["# rows, cols가 1000넘어갈땐 실행 하지 마세요. (노트북 멈춥니다.)\n","sampleRand2Darray"]},{"cell_type":"code","execution_count":24,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1716805885566,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"34YB4XnRGnj2","outputId":"6af229e3-6431-4344-cb5b-e1cd8d110672"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[[0.862470871220076, 0.562222333128439],\n"," [0.8452103996367853, 0.3652566151289266]]"]},"metadata":{},"execution_count":24}],"source":["# rows, cols가 1000넘어갈땐 실행 하지 마세요. (노트북 멈춥니다.)\n","sampleRand2Dlist"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1716805885566,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"JvAxm8IdFrx9","outputId":"139b83bd-ef97-4e89-98b4-8bb609e41c13"},"outputs":[{"output_type":"stream","name":"stdout","text":["[파이썬 기본 자료형 사용 - 모든 원소의 합 구하기]\n","Elapsed: 0.0021805763244628906\n","[파이썬 기본 자료형 사용 - 모든 원소에 1 더하기]\n","Elapsed: 3.266334533691406e-05\n","----------------------------------------------\n","[NumPy사용 - 모든 원소의 합 구하기]\n","Elapsed: 0.002104520797729492\n","[NumPy사용 - 모든 원소에 1 더하기]\n","Elapsed: 5.817413330078125e-05\n"]}],"source":["with Timer('파이썬 기본 자료형 사용 - 모든 원소의 합 구하기'):\n","  sum = 0\n","\n","  for list in sampleRand2Dlist:\n","    for e in list:\n","      sum += e\n","\n","with Timer('파이썬 기본 자료형 사용 - 모든 원소에 1 더하기'):\n","  sampleRand2Dlist2 = []\n","\n","  for list in sampleRand2Dlist:\n","    tempList = []\n","\n","    for e in list:\n","      tempList.append(e+1)\n","\n","    sampleRand2Dlist2.append(tempList)\n","\n","print(\"----------------------------------------------\")\n","\n","with Timer('NumPy사용 - 모든 원소의 합 구하기'):\n","  sum = np.sum(sampleRand2Darray)\n","\n","with Timer('NumPy사용 - 모든 원소에 1 더하기'):\n","  sampleRand2Darray2 = sampleRand2Darray + 1"]},{"cell_type":"markdown","metadata":{"id":"C5afV1nFfowk"},"source":["#### NumPy 장점\n","\n","- 코어 부분이 C로 구현되어 동일한 연산을 하더라도 Python에 비해 속도가 빠름\n","- 라이브러리에 구현되어있는 함수들을 활용해 짧고 간결한 코드 작성 가능\n","- (효율적인 메모리 사용이 가능하도록 구현됨)"]},{"cell_type":"markdown","metadata":{"id":"UzwJlSsmPtTq"},"source":["### (참고) ndarray가 list보다 빠른 이유"]},{"cell_type":"markdown","metadata":{"id":"gEqzxKWIMXSv"},"source":["![alt text](https://lh3.googleusercontent.com/JD1ljKEm4S_4hvIu8XqTLUw75AjB6K-ElhXY6oMqBiPVEPIkNpHjlMLKsTbpWMIXOZ1X3Ompb-v3lI5FHqlyWWOFR0Pg3vLsio9_8OSgFoAywjGAC6oY85kCahlx-rJtSqW9M3szyXBVjrnlUYIo3opwX7ch7BYaV6sLReXAOwcJThS4f-E-PQWOzwSsCerL_-QEi_wcEV_4Aef_q0u9lrcjvZX-OwW-AcSILKPIB3yoZar4zTTOPHz-miQ4yq2gOktHY1wR4izuJ5SmIT2feKEdP6sD5So8I24vdt1mKKjro3fQenb9ExtH-zAxlJQarxaDnklts7801rG56sa6sE69ZJBp3ZzJ8qr59SM1xf2t9dU1WHcIvMWM5g39B85aIYHRCFmqfwaAx6Gl8x7To_33nyLpc8hA6gIbPQ46O6N_I3-s2G_t5E1dt9mEr0v9fgnco5ib53RP7myVnH6prsSOP4n0hzSvf_gBvKsYIJ2TJA-631XcIR5K7VgE6kycjbVGtTlfDn5fTbVbjgJyIR2xhjPFQ85rxpLnPD0NLE8LzGzjA7bo3CJiBjd0CUHbjbUbUINtLHm8H8lT9U7vZIEzLSIA4dvO3SujTC8R8F7dPBO5Bc91VTWF1mqUftGeWmIdJ61E-KlKb6lRYnRdNq55scpLa3sX2Y2v3tCFq4uHvUM2VO4gkyi_9WNZciyoq1gQD8e9_Ig3aUsWdU87JJMQNw=w638-h479-no)\n","\n","> (source: https://image.slidesharecdn.com/numpy20160519-160516164831/95/numpy-8-638.jpg)"]},{"cell_type":"markdown","metadata":{"id":"H-w7yLTNSuMM"},"source":["**파이썬 list가 느린 이유**\n","\n","- 파이썬 리스트는 결국 포인터의 배열\n","- 경우에 따라서 각각 객체가 메모리 여기저기 흩어져 있음\n","- 그러므로 캐시 활용이 어려움\n","\n","**NumPy ndarray가 빠른 이유**\n","\n","- ndarray는 타입을 명시하여 원소의 배열로 데이터를 유지\n","- 다차원 데이터도 연속된 메모리 공간이 할당됨\n","- 많은 연산이 dimensions과 strides를 잘 활용하면 효율적으로 가능\n","  - 가령 transpose는 strides를 바꾸는 것으로 거의 공짜\n","- ndarray 구현 방식을 떠올리면 어떻게 성능을 낼 수 있는지 상상 가능\n","\n"]},{"cell_type":"markdown","metadata":{"id":"lZvri5rGa9ky"},"source":["- 예) NumPy에서 Transpose 구현"]},{"cell_type":"markdown","metadata":{"id":"tHcsagXmaore"},"source":["![alt text](https://lh3.googleusercontent.com/-cTovEUtM3SZj9_Pd12Sf_hkJpwr9hvvlOTQVC80Q697w8bsSV7I4sAru5fHmgxU7FmxZtq9ZqgvOAqZg41oFjXaEwAtLMLVmN75BIk6HClFMfC6jecLYB6sKDWQUNcLDb2Pt5Vbi8jUVb6VLyWbZGvCVYobh1ev1aNvPoCrqBtR8uv1P8E99xSoaIvzp4dvVG14b_eLBGKuTnak0P305F8OgJgQq2M0Q8_unVPygZOo-vdA9fPx8z_LpOqB0ZIqIXEhf7NmsRWk0cuuUkgJlqJselVnHnTSIVCIohQaOLAU1U_Acufab3szF4BGP-D3DUUQaPcsN-HhxIkSEaFgxuylaRbEUOdYWeXwvuYe9tzNkIzndFtWaQ0MfeBbwlEscaIRVjxsICdCdT0xvX8vpgBegnNQUSo0kT2e3JjY3VLO8YQZ28W457BMyz_2NA_hKuwcGeFWotVoN0AlUTNNQSlpwQzitwSAsi_IlVfNDRYTTTFb-9dTjD9rdgQid3khyHmelE6k1VYayHnwJsJPiD_hcNGYpUChhC5WD-05Qg-R6vrOWXCvkB0tG4Q7fxMIh1_-fhOwEyEOsH91byk4afqJx559LeHldNiDVeU6I-rJRPtkG5mrBYPr0jD2uSIDvpX0ATVesWlunIKD7kvctEidPx8I7yhbKaI96L81K5cbGg49To2OpUaNZ3ttvZiztErvTbkLhruKXIj253HWAI2Jdg=w720-h405-no)"]},{"cell_type":"code","execution_count":26,"metadata":{"id":"bo2JDzn3X5LZ","executionInfo":{"status":"ok","timestamp":1716805885566,"user_tz":-540,"elapsed":4,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["x = np.array([[1,2],[3,4]], dtype=np.int8)\n","\n","y = x.T"]},{"cell_type":"code","execution_count":27,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1716805885566,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"LZpAtMh_X-Xd","outputId":"2c5e9352-ede9-4816-b40f-21a68335d805"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2],\n","       [3, 4]], dtype=int8)"]},"metadata":{},"execution_count":27}],"source":["x"]},{"cell_type":"code","execution_count":28,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":481,"status":"ok","timestamp":1716805886044,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"5JU0K-K2X95g","outputId":"2dd5fffd-5f32-48cc-85a2-c2bbca973c9d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 3],\n","       [2, 4]], dtype=int8)"]},"metadata":{},"execution_count":28}],"source":["y"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1716805886044,"user":{"displayName":"이도원","userId":"06437499916977662820"},"user_tz":-540},"id":"46HZuKvGgCAE","outputId":"3b8fc0aa-6e1b-4979-d4f8-ff1c167d9cb3"},"outputs":[{"output_type":"stream","name":"stdout","text":["(2, 1)\n","(1, 2)\n"]}],"source":["print(x.strides)\n","print(y.strides)"]},{"cell_type":"markdown","metadata":{"id":"LdbiXqEKX8yr"},"source":["# 다차원 배열 생성 1"]},{"cell_type":"markdown","metadata":{"id":"YqF37G0_hJn1"},"source":["명시적으로 값을 입력해 다차원 배열을 만드는 방법을 알아봅니다."]},{"cell_type":"markdown","metadata":{"id":"h7VbFRMGYTU3"},"source":["## 다차원 배열의 자료형"]},{"cell_type":"markdown","metadata":{"id":"csIZ1CsL73Vj"},"source":["![alt text](https://lh3.googleusercontent.com/ZhC-hkgaa_zQggBdbQ8J33aW8b6Ubbccwr4dLOiVlXAuJYgBiZzRR0jcrAe9C6h26h_3xfd1UbMt6vwIpLfDffABXNKDkUT6RUZre4-j7DtYt7CFsQ1b4RdNZwfCQoSkr_BWKACQQ42krqB0Jkri4CDHGMhKgALRRiJJaQCsR0frysFtltqxiX0ScqZleBxMkADkJr8FtFKh34ERS4w3lwIqddpWd9ctgu9bJsDA19yNEmLouiwapSV7NwAXgDko3fqxo_W4CY6NU_vXxx8xoyFtaXxdXRCs2yketYJ66IP8Rv_mADUSnXfcCfgHOPlU_PzkT-cLdnfLftHgitAPrDHOqiH7EpLmgg4bO_HWIhpDwfG7iu2upN_rw-sFl64aGj4XhhbPYfmDZpnIEyrvKE4DjycH6rITqxTbhMSWfkeeUBENLusqELkVnPRikaaxYiDVPRuedOp6hNXo7R4A-TghyLn-k61kV3Ruwc14ytOWhZ0BngaDXVo-KF_ZxJUr5GuaFOZbi4UKhXbvnObRZAb0QgKaCdvkYysxU31oryDHpx526hG6SW6b99CxOWbT0lBTy0RoynGz_WVV_ua_umNcmkBNMkt3u04uCUWk8a-BqMG_oVpyqNmqetASSOhCZNbisBzkEgmo4sDbdqsNlFcY3fa-Og8mB1UNmC2uWl5RefSArRAoKn6KxZpcr6qJdl8YWT98ncW6behEO1wLoNsdBg=w526-h413-no)\n","\n","(source: https://docs.scipy.org/doc/numpy/reference/arrays.scalars.html)"]},{"cell_type":"markdown","metadata":{"id":"klF_e3KW9Vpx"},"source":["다차원 배열의 원소는 위와 같은 데이터 타입을 가질 수 있습니다.\n","\n","다차원 배열의 원소는 동일한 데이터 타입을 가져야 합니다."]},{"cell_type":"markdown","metadata":{"id":"T0lV8kuGYTkg"},"source":["## 직접 원소를 입력해서 다차원 배열 생성하기"]},{"cell_type":"markdown","metadata":{"id":"8NpxbG2gDGnA"},"source":["**np.array()**를 사용해 다차원 배열을 생성할 수 있습니다."]},{"cell_type":"markdown","metadata":{"id":"MWPPYiNFBuJa"},"source":["### bool"]},{"cell_type":"markdown","metadata":{"id":"ppE0ijaUC6x5"},"source":["boolean 데이터를 입력해서 다차원 배열을 생성해봅시다."]},{"cell_type":"code","execution_count":30,"metadata":{"id":"_a7cfM8aBiaf","executionInfo":{"status":"ok","timestamp":1716805888175,"user_tz":-540,"elapsed":1,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["boolArray = np.array([True, False, True, True, False])"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"o8vfhrvL8o4l","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805888734,"user_tz":-540,"elapsed":3,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"0aeaeeae-0116-4bc8-9ff2-8921bd0d55c6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ True, False,  True,  True, False])"]},"metadata":{},"execution_count":31}],"source":["boolArray"]},{"cell_type":"code","execution_count":32,"metadata":{"id":"cakQ3-2HBp54","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805888735,"user_tz":-540,"elapsed":3,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"8859fc6b-a6d9-4750-d378-1fa93c441030"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('bool')"]},"metadata":{},"execution_count":32}],"source":["boolArray.dtype"]},{"cell_type":"markdown","metadata":{"id":"SPopJWaXBxOP"},"source":["### number"]},{"cell_type":"markdown","metadata":{"id":"W1vU7-rxDqZi"},"source":["number 데이터를 입력해서 다차원 배열을 생성해봅시다.\n","\n","정수형, 부호없는 정수형, 실수형, 복소수형이 있습니다."]},{"cell_type":"markdown","metadata":{"id":"VCNgKGDuCJSM"},"source":["#### 정수형"]},{"cell_type":"markdown","metadata":{"id":"riYQenZzEUt_"},"source":["정수형의 default data type은 'int64'입니다.\n","\n","<font color=\"red\">(진실: default data type은 운영체제에 따라 다릅니다.)</font>"]},{"cell_type":"code","execution_count":33,"metadata":{"id":"QPVhK1XvB6sH","executionInfo":{"status":"ok","timestamp":1716805890524,"user_tz":-540,"elapsed":1,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["intArray = np.array([[1, 2], [3, 4]])"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"_0m-Jv15B_ha","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805891042,"user_tz":-540,"elapsed":3,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"0166d16e-bf54-4cf2-bed5-54c794edc1fe"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2],\n","       [3, 4]])"]},"metadata":{},"execution_count":34}],"source":["intArray"]},{"cell_type":"code","execution_count":35,"metadata":{"id":"XynD9eUOB_Zf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805891042,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"abd57ed0-4198-442e-a247-0aebd521f167"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('int64')"]},"metadata":{},"execution_count":35}],"source":["intArray.dtype"]},{"cell_type":"markdown","metadata":{"id":"6ZENZr82D1jh"},"source":["#### 부호없는 정수형"]},{"cell_type":"markdown","metadata":{"id":"9-eWQM6JEY48"},"source":["부호없는 정수형의 default data type은 'uint64'입니다."]},{"cell_type":"code","execution_count":36,"metadata":{"id":"9xYaFEmMD39n","executionInfo":{"status":"ok","timestamp":1716805893829,"user_tz":-540,"elapsed":3,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["uintArray = np.array([[1, 2], [3, 4]], dtype='uint')\n","# uintArray = np.array([[1, 2], [3, 4]], dtype='uint64')"]},{"cell_type":"code","execution_count":37,"metadata":{"id":"COosTXN_EBiR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805893829,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"fb995329-05de-485a-ad64-179471a51d5f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2],\n","       [3, 4]], dtype=uint64)"]},"metadata":{},"execution_count":37}],"source":["uintArray"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"_y00GptXEBOm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805894344,"user_tz":-540,"elapsed":516,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"057867d0-eead-46b4-e745-0732aa5218c3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('uint64')"]},"metadata":{},"execution_count":38}],"source":["uintArray.dtype"]},{"cell_type":"markdown","metadata":{"id":"9H0yDDqMB0fu"},"source":["#### 실수형"]},{"cell_type":"markdown","metadata":{"id":"efVd88hfEjFr"},"source":["실수형의 default data type은 'float64'입니다."]},{"cell_type":"code","execution_count":39,"metadata":{"id":"ZlMmubOcCQbV","executionInfo":{"status":"ok","timestamp":1716805895496,"user_tz":-540,"elapsed":1,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["floatArray = np.array([[1.1, 2.2], [3.3, 4.4]])\n","floatArray = np.array([[1.1, 2.2], [3.3, 4.4]], dtype='float64')"]},{"cell_type":"code","execution_count":40,"metadata":{"id":"9Yi94xAtCQYJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805896004,"user_tz":-540,"elapsed":4,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"4c85e4c1-5a52-44c6-c3b3-c2ef8780a318"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1.1, 2.2],\n","       [3.3, 4.4]])"]},"metadata":{},"execution_count":40}],"source":["floatArray"]},{"cell_type":"code","execution_count":41,"metadata":{"id":"IME-bubKCQTA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805896004,"user_tz":-540,"elapsed":3,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"0fe738ec-f99b-4afe-c8c3-13bbd918032f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('float64')"]},"metadata":{},"execution_count":41}],"source":["floatArray.dtype"]},{"cell_type":"markdown","metadata":{"id":"DWSVrft6IXv_"},"source":["##### 형변환"]},{"cell_type":"markdown","metadata":{"id":"WLO7UIQGEras"},"source":["데이터가 정수로 입력되더라도 data type을 실수형으로 명시한다면 실수형으로 자동 형변환이 일어납니다."]},{"cell_type":"code","execution_count":42,"metadata":{"id":"HIOBnBfECg_h","executionInfo":{"status":"ok","timestamp":1716805897335,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["floatArray2 = np.array([[1, 2], [3, 4]], dtype='float64')"]},{"cell_type":"code","execution_count":43,"metadata":{"id":"TIs7n0qTCg8o","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805898458,"user_tz":-540,"elapsed":4,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"94752215-eda8-4b83-ebb9-e395a2ab6f0e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 2.],\n","       [3., 4.]])"]},"metadata":{},"execution_count":43}],"source":["floatArray2"]},{"cell_type":"code","execution_count":44,"metadata":{"id":"5R-yc4IHCg4K","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805898458,"user_tz":-540,"elapsed":3,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"028edc0d-f3af-43af-f9e4-a687881fac36"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('float64')"]},"metadata":{},"execution_count":44}],"source":["floatArray2.dtype"]},{"cell_type":"markdown","metadata":{"id":"ac-kL0GrIJXT"},"source":["##### 더 나은 방법"]},{"cell_type":"markdown","metadata":{"id":"YOXJ-BHNI0WF"},"source":["1.0, 2.0, 3.0, 4.0이라는 실수형 데이터를 가지는 다차원배열을 만들고 싶었다면, 아래 방법이 더 나은 코딩표준입니다."]},{"cell_type":"code","execution_count":45,"metadata":{"id":"4TRVN90hH-Q0","executionInfo":{"status":"ok","timestamp":1716805899838,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["floatArray3 = np.array([[1., 2.], [3., 4.]])"]},{"cell_type":"code","execution_count":46,"metadata":{"id":"t_EosM17IDgy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805900367,"user_tz":-540,"elapsed":3,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"c424c11f-3d15-4135-a2e7-96bc5e97d461"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 2.],\n","       [3., 4.]])"]},"metadata":{},"execution_count":46}],"source":["floatArray3"]},{"cell_type":"code","execution_count":47,"metadata":{"id":"Sfln3jgRIDWI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805900367,"user_tz":-540,"elapsed":3,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"0d7eddb0-c444-407e-ea7c-293619a9081a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('float64')"]},"metadata":{},"execution_count":47}],"source":["floatArray3.dtype"]},{"cell_type":"markdown","metadata":{"id":"dQT7fOIGG0Np"},"source":["##### 참고"]},{"cell_type":"markdown","metadata":{"id":"GgSv92NxH0Lp"},"source":["정수형에서 실수형으로의 형변환 과정은 데이터 손실이 일어나지 않아 문제될 부분이 없지만 반대의 경우에는 문제가 발생할 수 있습니다."]},{"cell_type":"code","execution_count":48,"metadata":{"id":"OyI5R0pKHLjG","executionInfo":{"status":"ok","timestamp":1716805901505,"user_tz":-540,"elapsed":1,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["intArray2 = np.array([[1.1, 2.2], [3.3, 4.4]], dtype='int')"]},{"cell_type":"code","execution_count":49,"metadata":{"id":"0rqDle1lHSjP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805902516,"user_tz":-540,"elapsed":3,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"7094f005-b9c0-4737-c1a9-293e3b44524d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2],\n","       [3, 4]])"]},"metadata":{},"execution_count":49}],"source":["intArray2"]},{"cell_type":"markdown","metadata":{"id":"2w0QOfD3Igzv"},"source":["실수가 정수로 형변환되며 데이터의 손실이 발생했습니다.\n","<font color=\"red\">입력한 데이터와 다차원 배열내의 데이터가 다릅니다.</font>"]},{"cell_type":"markdown","metadata":{"id":"LbE2qHLjB0O9"},"source":["#### (참고) 복소수형"]},{"cell_type":"markdown","metadata":{"id":"wkKPYQREGH40"},"source":["복소수형의 default data type은 'complex128'입니다."]},{"cell_type":"code","execution_count":50,"metadata":{"id":"8YHs9hemF42o","executionInfo":{"status":"ok","timestamp":1716805903048,"user_tz":-540,"elapsed":1,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["complexArray = np.array([1+1j, 2+2j, 3+3j, 4+4j, 5+5j])"]},{"cell_type":"code","execution_count":51,"metadata":{"id":"JhWPA4DI53Eq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805903603,"user_tz":-540,"elapsed":5,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"ce541001-a90a-4b52-b573-2ddcf6f82ec1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1.+1.j, 2.+2.j, 3.+3.j, 4.+4.j, 5.+5.j])"]},"metadata":{},"execution_count":51}],"source":["complexArray"]},{"cell_type":"code","execution_count":52,"metadata":{"id":"OfF1aCfQGCw3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805903603,"user_tz":-540,"elapsed":4,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"eb845113-5521-4b2c-d24d-9bfdab078cb0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('complex128')"]},"metadata":{},"execution_count":52}],"source":["complexArray.dtype"]},{"cell_type":"markdown","metadata":{"id":"-FJY7VRbYTuR"},"source":["## 파일에서 데이터를 입력 받아 다차원 배열 생성하기\n"]},{"cell_type":"markdown","metadata":{"id":"3HdL2XcfTbAO"},"source":["np.genfromtxt()을 이용하여 파일에 저장된 데이터를 입력받아 다차원 배열을 생성할 수 있습니다.\n","\n","하지만 사용할 일은 많지 않습니다. 그 이유는,\n","\n","- NumPy ndarray는 동일한 데이터타입만을 가질 수 있습니다.\n","- 대부분 데이터 파일에는 하나의 데이터 타입만 있는게 아니라 정수, 실수, 문자열이 섞여 있습니다.\n","\n","파일에서 데이터를 읽어올땐 NumPy의 genfromtxt()보단 **Pandas의 read_csv()나 read_excel()**을 주로 사용합니다."]},{"cell_type":"markdown","metadata":{"id":"87ZULGqjNVo9"},"source":["### 예시"]},{"cell_type":"code","execution_count":53,"metadata":{"id":"s3dNZLWiMfMj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805907073,"user_tz":-540,"elapsed":1917,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"450d63d6-ace9-4fb3-8f36-ddebe1867960"},"outputs":[{"output_type":"stream","name":"stdout","text":["--2024-05-27 10:31:44--  https://www.dropbox.com/s/loycdeh50xzx6ju/mnist_train_super_small%20-%20mnist_train_super_small.csv?dl=0\n","Resolving www.dropbox.com (www.dropbox.com)... 162.125.65.18, 2620:100:6022:18::a27d:4212\n","Connecting to www.dropbox.com (www.dropbox.com)|162.125.65.18|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: /s/raw/loycdeh50xzx6ju/mnist_train_super_small%20-%20mnist_train_super_small.csv [following]\n","--2024-05-27 10:31:45--  https://www.dropbox.com/s/raw/loycdeh50xzx6ju/mnist_train_super_small%20-%20mnist_train_super_small.csv\n","Reusing existing connection to www.dropbox.com:443.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://uc55440614abb913abbb371c70d7.dl.dropboxusercontent.com/cd/0/inline/CTry0ZldSuUKrttMuNF11GPhgqKqCHoXzhMCuUBwoqQGCRRaOP1R_m2QXtVllyimKG9YlZe15R7ylCicFkWNmuKoq0I8lAZCY6mWk_mLWKEPD9k-JAprhJY4O6zehEnSCuMMJBVfUpOZ21hYkfCu1iDE/file# [following]\n","--2024-05-27 10:31:45--  https://uc55440614abb913abbb371c70d7.dl.dropboxusercontent.com/cd/0/inline/CTry0ZldSuUKrttMuNF11GPhgqKqCHoXzhMCuUBwoqQGCRRaOP1R_m2QXtVllyimKG9YlZe15R7ylCicFkWNmuKoq0I8lAZCY6mWk_mLWKEPD9k-JAprhJY4O6zehEnSCuMMJBVfUpOZ21hYkfCu1iDE/file\n","Resolving uc55440614abb913abbb371c70d7.dl.dropboxusercontent.com (uc55440614abb913abbb371c70d7.dl.dropboxusercontent.com)... 162.125.66.15, 2620:100:6021:15::a27d:410f\n","Connecting to uc55440614abb913abbb371c70d7.dl.dropboxusercontent.com (uc55440614abb913abbb371c70d7.dl.dropboxusercontent.com)|162.125.66.15|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 1051 (1.0K) [text/plain]\n","Saving to: ‘mnist_train_super_small.csv’\n","\n","mnist_train_super_s 100%[===================>]   1.03K  --.-KB/s    in 0s      \n","\n","2024-05-27 10:31:46 (495 MB/s) - ‘mnist_train_super_small.csv’ saved [1051/1051]\n","\n"]}],"source":["# 파일 다운로드 받기\n","!wget -O 'mnist_train_super_small.csv' 'https://www.dropbox.com/s/loycdeh50xzx6ju/mnist_train_super_small%20-%20mnist_train_super_small.csv?dl=0'"]},{"cell_type":"code","execution_count":54,"metadata":{"id":"tyGFs4eANb5f","executionInfo":{"status":"ok","timestamp":1716805907073,"user_tz":-540,"elapsed":6,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["import numpy as np\n","fromCSVArray = np.genfromtxt('mnist_train_super_small.csv', delimiter=',')"]},{"cell_type":"code","execution_count":55,"metadata":{"id":"jJV40k7tNbyA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805907073,"user_tz":-540,"elapsed":5,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"3930e6a9-1770-4d77-b257-8def298446f9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 21., 248., 246.,  34.,   0.,   0.,   0.,   0.,   5.,  61., 234.,\n","        152.],\n","       [  0.,   0.,   0.,   0.,   0.,   0.,   0.,  92., 254., 196.,   0.,\n","          0.],\n","       [  0.,   0.,   0.,   0.,   0.,  19., 201., 254., 196.,  15.,   0.,\n","          0.],\n","       [  0.,   0.,   0.,   0.,   0.,   0., 169., 254., 254., 222.,  30.,\n","          0.],\n","       [  0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,  19., 228., 252.,\n","         57.],\n","       [253., 204., 178., 141., 191., 254., 228.,  53.,   4.,   0.,   0.,\n","          0.],\n","       [  0.,   0.,   0.,   0.,   0.,   0.,   0.,   0., 114., 254., 253.,\n","        168.],\n","       [255.,  29.,   0.,   3.,  30.,  79.,   0.,   0.,   0.,   0.,   0.,\n","          0.],\n","       [  0.,   0.,  14., 158., 244., 253., 203.,  12.,   0.,   0.,   0.,\n","          0.],\n","       [253., 191.,  84.,   0.,   0.,   0.,   0.,  73., 253., 253., 145.,\n","          0.],\n","       [253., 253., 253., 253., 253., 253., 114.,   0.,   0.,   0.,   0.,\n","          0.],\n","       [  0.,   0.,   0., 132., 252., 253., 252., 172.,  30.,   0.,   0.,\n","          0.],\n","       [254., 254., 254., 255., 254., 254., 254., 254., 254., 254., 254.,\n","         37.],\n","       [  0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,  48.,\n","        123.],\n","       [ 63., 253., 253.,  93.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,\n","          0.],\n","       [  0.,   0.,  20.,   0.,  82., 253., 151.,   0.,   0.,   0.,   0.,\n","          0.],\n","       [ 57.,   0.,   0.,   0.,   4., 169., 252., 252., 161.,   0.,   0.,\n","          0.],\n","       [  6.,  44., 185., 239., 253., 254., 181.,  57.,   0.,   0.,   0.,\n","          0.],\n","       [  0.,   0.,   0., 101., 250.,  28.,   0.,   0.,   0.,   0.,   0.,\n","          0.],\n","       [236., 222.,   0.,   0.,   0., 174., 249.,  56.,   0.,   0.,   0.,\n","          0.],\n","       [  0.,   0.,   0., 164., 255., 255., 202.,   0.,   0.,   0.,   0.,\n","          0.],\n","       [ 51.,  51., 113., 193., 254., 233., 142., 122., 254., 192.,   0.,\n","          0.],\n","       [139., 139., 140., 139., 139., 139., 140., 165., 252., 252., 101.,\n","          0.],\n","       [252., 252., 253., 252., 252., 252., 253., 252.,  71.,   0.,   0.,\n","          0.],\n","       [ 76.,  76.,  76.,  18.,   0., 231., 253., 106.,   0.,   0.,   0.,\n","          0.],\n","       [114., 236., 252., 252.,  96.,   0.,   0.,   0.,   0.,   0.,   0.,\n","          0.],\n","       [  0.,   0.,   0.,   0.,   0.,   0.,   0., 198., 253., 254., 253.,\n","          0.],\n","       [134., 252., 252., 252., 253., 192.,   0.,   0.,   0.,   0.,   0.,\n","          0.],\n","       [  0.,   0.,   0.,   0.,   0.,   0.,   0.,   0., 254., 233.,   0.,\n","          0.],\n","       [ 89.,   6.,   0.,   6., 200., 254., 249.,  50.,   0.,   0.,   0.,\n","          0.]])"]},"metadata":{},"execution_count":55}],"source":["fromCSVArray"]},{"cell_type":"markdown","metadata":{"id":"D6Oz2Ld0NQPW"},"source":["### 구글 드라이브에서 파일 가져오기"]},{"cell_type":"code","execution_count":56,"metadata":{"id":"HXF0Vl0pKNar","colab":{"base_uri":"https://localhost:8080/","height":335},"executionInfo":{"status":"error","timestamp":1716805911358,"user_tz":-540,"elapsed":4288,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"0a267655-aa6b-470f-b10f-2897413cdc9d"},"outputs":[{"output_type":"error","ename":"MessageError","evalue":"Error: credential propagation was unsuccessful","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mMessageError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-56-bf120db13af5>\u001b[0m in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# 구글드라이브 마운트\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolab\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdrive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mdrive\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36mmount\u001b[0;34m(mountpoint, force_remount, timeout_ms, readonly)\u001b[0m\n\u001b[1;32m     98\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mmount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmountpoint\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mforce_remount\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout_ms\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m120000\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreadonly\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     99\u001b[0m   \u001b[0;34m\"\"\"Mount your Google Drive at the specified mountpoint path.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 100\u001b[0;31m   return _mount(\n\u001b[0m\u001b[1;32m    101\u001b[0m       \u001b[0mmountpoint\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    102\u001b[0m       \u001b[0mforce_remount\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mforce_remount\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36m_mount\u001b[0;34m(mountpoint, force_remount, timeout_ms, ephemeral, readonly)\u001b[0m\n\u001b[1;32m    131\u001b[0m   )\n\u001b[1;32m    132\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mephemeral\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 133\u001b[0;31m     _message.blocking_request(\n\u001b[0m\u001b[1;32m    134\u001b[0m         \u001b[0;34m'request_auth'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    135\u001b[0m         \u001b[0mrequest\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m'authType'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m'dfs_ephemeral'\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mblocking_request\u001b[0;34m(request_type, request, timeout_sec, parent)\u001b[0m\n\u001b[1;32m    174\u001b[0m       \u001b[0mrequest_type\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrequest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparent\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mparent\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexpect_reply\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    175\u001b[0m   )\n\u001b[0;32m--> 176\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mread_reply_from_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequest_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout_sec\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mread_reply_from_input\u001b[0;34m(message_id, timeout_sec)\u001b[0m\n\u001b[1;32m    101\u001b[0m     ):\n\u001b[1;32m    102\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0;34m'error'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mreply\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 103\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mMessageError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreply\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'error'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    104\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mreply\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'data'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    105\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mMessageError\u001b[0m: Error: credential propagation was unsuccessful"]}],"source":["# 구글드라이브의 파일을 가져오고 싶은 경우\n","\n","# 구글드라이브 마운트\n","from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"c5AgQYcnKjkM","executionInfo":{"status":"aborted","timestamp":1716805911359,"user_tz":-540,"elapsed":7,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["# 구글드라이브내에 있는 파일 경로 지정\n","fromCSVArray = np.genfromtxt('/content/drive/My Drive/talk-on-seminar-numpy/resources/mnist_train_super_small.csv', delimiter=',')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BqJXtoaAvISo","executionInfo":{"status":"aborted","timestamp":1716805911359,"user_tz":-540,"elapsed":7,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["fromCSVArray"]},{"cell_type":"markdown","metadata":{"id":"K6FWAdVaYT1a"},"source":["# 다차원 배열 생성 2"]},{"cell_type":"markdown","metadata":{"id":"-nIkZ9IS9AAI"},"source":["NumPy에 구현되어있는 함수를 활용해 다차원 배열을 만드는 방법을 알아봅니다.\n","\n","https://docs.scipy.org/doc/numpy/reference/routines.array-creation.html"]},{"cell_type":"markdown","metadata":{"id":"vOPgfIGmYT89"},"source":["## numpy.empty"]},{"cell_type":"markdown","metadata":{"id":"cXi-LLekg6pC"},"source":["Return a new array of given shape and type, without initializing entries."]},{"cell_type":"code","execution_count":57,"metadata":{"id":"FfORCLsWgd39","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805911359,"user_tz":-540,"elapsed":7,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"4aba104a-4998-40f7-b9b9-e9efb0e80553"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[5.00678060e-310, 0.00000000e+000, 9.76118064e-313],\n","       [1.78247646e-312, 9.54898106e-313, 2.76676762e-322]])"]},"metadata":{},"execution_count":57}],"source":["\n","np.empty((2,3)) # 쓰레기값 들어감, 초기화 안됨."]},{"cell_type":"code","execution_count":58,"metadata":{"id":"_ZeJainFhFeO","executionInfo":{"status":"ok","timestamp":1716805911962,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["A = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])"]},{"cell_type":"code","execution_count":59,"metadata":{"id":"ZM3ofgHfd8ie","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805912427,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"9b0be8b0-7e12-43fc-ebf2-d4713958d8c1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2, 3],\n","       [4, 5, 6],\n","       [7, 8, 9]])"]},"metadata":{},"execution_count":59}],"source":["A"]},{"cell_type":"code","execution_count":60,"metadata":{"id":"pv64IqQMhUdi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805913111,"user_tz":-540,"elapsed":685,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"1cf43d74-1661-4aa9-9090-b84481a35197"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[101338364209294,               0,               0],\n","       [              0,               0,               0],\n","       [              0,               0,               0]])"]},"metadata":{},"execution_count":60}],"source":["np.empty_like(A)"]},{"cell_type":"markdown","metadata":{"id":"3SQd-8BcYT6O"},"source":["## numpy.zeros"]},{"cell_type":"markdown","metadata":{"id":"PKH0lUxriSA6"},"source":["Return a new array of given shape and type, filled with zeros."]},{"cell_type":"code","execution_count":61,"metadata":{"id":"gJEqvi2tiScc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805913577,"user_tz":-540,"elapsed":4,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"814bd3d5-25da-4c46-c493-a4ec80f34bfc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 0.],\n","       [0., 0., 0.]])"]},"metadata":{},"execution_count":61}],"source":["np.zeros((2, 3)) # 0으로 초기화"]},{"cell_type":"code","execution_count":62,"metadata":{"id":"aBAZ2cC9ieG9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805913577,"user_tz":-540,"elapsed":3,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"bec5691c-df4e-49d1-c1f7-a4bafc08ae7c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 0, 0],\n","       [0, 0, 0]])"]},"metadata":{},"execution_count":62}],"source":["np.zeros((2, 3), dtype=int)"]},{"cell_type":"code","execution_count":63,"metadata":{"id":"bxdxGvAshgGS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805914741,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"dee57d05-a565-4cea-b34b-dd6726c39e99"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 0, 0],\n","       [0, 0, 0],\n","       [0, 0, 0]])"]},"metadata":{},"execution_count":63}],"source":["np.zeros_like(A)"]},{"cell_type":"markdown","metadata":{"id":"2f6I3TUUYT--"},"source":["## numpy.ones"]},{"cell_type":"markdown","metadata":{"id":"2TtCx78Gf_Gu"},"source":["Return a new array of given shape and type, filled with ones."]},{"cell_type":"code","execution_count":64,"metadata":{"id":"51_LeiXcfpzR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805915164,"user_tz":-540,"elapsed":4,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"6fc5f05a-2ce0-48c5-e38b-45cdae76e9c1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 1., 1.],\n","       [1., 1., 1.]])"]},"metadata":{},"execution_count":64}],"source":["np.ones((2,3)) # 1로 초기화"]},{"cell_type":"code","execution_count":65,"metadata":{"id":"4OqSJJs7hwbQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805915165,"user_tz":-540,"elapsed":5,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"d176a2dd-c85f-4f23-c9dd-4a3df23d9652"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 1, 1],\n","       [1, 1, 1]])"]},"metadata":{},"execution_count":65}],"source":["np.ones((2,3), dtype=int)"]},{"cell_type":"code","execution_count":66,"metadata":{"id":"FFIxgrN9hzSn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805915712,"user_tz":-540,"elapsed":550,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"d6987591-b8ec-445a-9599-dc24f6526686"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 1, 1],\n","       [1, 1, 1],\n","       [1, 1, 1]])"]},"metadata":{},"execution_count":66}],"source":["np.ones_like(A)"]},{"cell_type":"markdown","metadata":{"id":"iYHi8SL9jHdR"},"source":["## numpy.identity"]},{"cell_type":"markdown","metadata":{"id":"wppdmiYnjLVS"},"source":["Return the identity array."]},{"cell_type":"code","execution_count":67,"metadata":{"id":"gk5ptfwOjMoM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805915712,"user_tz":-540,"elapsed":3,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"7d529bcb-b2a4-4e47-ef29-feb69d21868d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0.],\n","       [0., 1.]])"]},"metadata":{},"execution_count":67}],"source":["np.identity(2)"]},{"cell_type":"code","execution_count":68,"metadata":{"id":"ufzLDxObjMbQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805915712,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"e6b6187e-e096-4219-82d9-8b81b47a9bd6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 0, 0],\n","       [0, 1, 0],\n","       [0, 0, 1]])"]},"metadata":{},"execution_count":68}],"source":["np.identity(3, dtype=int)"]},{"cell_type":"markdown","metadata":{"id":"EphARzOujW1z"},"source":["## 참고"]},{"cell_type":"markdown","metadata":{"id":"i-hkaJr0iG1v"},"source":["### numpy.eye"]},{"cell_type":"markdown","metadata":{"id":"AqDYqxoIiU1x"},"source":["Return a 2-D array with ones on the diagonal and zeros elsewhere."]},{"cell_type":"code","execution_count":69,"metadata":{"id":"OMBY4vpth2fA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805919384,"user_tz":-540,"elapsed":4,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"cd5a34f2-ca4e-4744-cf3f-c7a988a73ac4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 0.],\n","       [0., 1., 0.],\n","       [0., 0., 1.]])"]},"metadata":{},"execution_count":69}],"source":["np.eye(3)"]},{"cell_type":"code","execution_count":70,"metadata":{"id":"RvJUTBkyh2Nr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805919384,"user_tz":-540,"elapsed":3,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"57f3ea9a-c1db-49b6-fc43-75039e0a7cc2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 0., 0.],\n","       [0., 1., 0., 0.],\n","       [0., 0., 1., 0.]])"]},"metadata":{},"execution_count":70}],"source":["np.eye(3, 4)"]},{"cell_type":"code","execution_count":71,"metadata":{"id":"yoB2BTKOiyvB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805920063,"user_tz":-540,"elapsed":4,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"33c0a069-e0af-47c6-b0e5-f46e75092179"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 1., 0., 0.],\n","       [0., 0., 1., 0.],\n","       [0., 0., 0., 1.]])"]},"metadata":{},"execution_count":71}],"source":["np.eye(3, 4, 1) # 1들이 위로 올라감"]},{"cell_type":"code","execution_count":72,"metadata":{"id":"Q5wD8DWRjuDs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805921296,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"a0f8d8bd-4778-4657-c867-33c3dc4ed417"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 0., 0.],\n","       [1., 0., 0., 0.],\n","       [0., 1., 0., 0.]])"]},"metadata":{},"execution_count":72}],"source":["np.eye(3, 4, -1) #1들이 아래로 내려감"]},{"cell_type":"markdown","metadata":{"id":"o2-dCEXxkAsq"},"source":["### numpy.full"]},{"cell_type":"markdown","metadata":{"id":"HlqXmw0rkHNn"},"source":["numpy.full(shape, fill_value, dtype=None, order='C')\n","\n","Return a new array of given shape and type, filled with fill_value."]},{"cell_type":"code","execution_count":73,"metadata":{"id":"geBFyWUEkG25","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805921732,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"b4e1b33f-01ac-421b-ab07-e6b327983ac5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[10, 10, 10],\n","       [10, 10, 10]])"]},"metadata":{},"execution_count":73}],"source":["np.full((2, 3), 10)"]},{"cell_type":"markdown","metadata":{"id":"CnCSOJICkVjv"},"source":["위 보다는 아래 방식을 선호합니다."]},{"cell_type":"code","execution_count":74,"metadata":{"id":"B3n5nkYgkPT3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805922216,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"b60b106f-3bdd-45c4-d443-b9ab52eedbbc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[10, 10, 10],\n","       [10, 10, 10]])"]},"metadata":{},"execution_count":74}],"source":["10 * np.ones((2,3), dtype=int) #ones로 초기화 후 10을 곱함. +)ones를 굉장히 많이 사용함."]},{"cell_type":"markdown","metadata":{"id":"AdnkzqaLfk7O"},"source":["### numpy.arange"]},{"cell_type":"markdown","metadata":{"id":"xgmdzhZPhOZs"},"source":["Return evenly spaced values within a given interval."]},{"cell_type":"code","execution_count":75,"metadata":{"id":"5Sr383Cmfkd7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805923186,"user_tz":-540,"elapsed":5,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"62e64d51-7e43-496c-f7de-8818921e4fbf"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"]},"metadata":{},"execution_count":75}],"source":["# default value\n","# start = 0\n","# step = 1\n","np.arange(10) # 0 ~ 9까지 range 함수와 비슷함."]},{"cell_type":"code","execution_count":76,"metadata":{"id":"n0rm-lH7gSmd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805923186,"user_tz":-540,"elapsed":4,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"9d479cf0-2e3e-45fd-ed5d-594076075a92"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1. , 1.5, 2. , 2.5, 3. , 3.5, 4. , 4.5])"]},"metadata":{},"execution_count":76}],"source":["np.arange(start=1.0, stop=5.0, step=0.5) # default step 값은 1이다."]},{"cell_type":"markdown","metadata":{"id":"vj0WRG9-hbd4"},"source":["### numpy.linspace"]},{"cell_type":"markdown","metadata":{"id":"azYRu3ophbRq"},"source":["Return evenly spaced numbers over a specified interval."]},{"cell_type":"code","execution_count":77,"metadata":{"id":"AfShQksbhku-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805923606,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"0ae0729e-e951-4f5b-de72-c22707937ca7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2.  , 2.25, 2.5 , 2.75, 3.  ])"]},"metadata":{},"execution_count":77}],"source":["np.linspace(2.0, 3.0, num=5)"]},{"cell_type":"markdown","metadata":{"id":"8umKaPA-YT4J"},"source":["# 다차원 배열 다루기 1"]},{"cell_type":"markdown","metadata":{"id":"YJamUKL9nK3T"},"source":["통계값을 구하는 함수에 대해 알아봅니다.\n","\n","<font color=\"red\">이제 반복문은 사용하지 않습니다.</font>\n","\n","https://docs.scipy.org/doc/numpy/reference/routines.statistics.html"]},{"cell_type":"markdown","metadata":{"id":"k_Ha7m_6oaVw"},"source":["![alt text](https://lh3.googleusercontent.com/zXC7mbgObMUkQoUnkfMvog5wU8Qh2bvLEwINZo7eilDpq_aun8c3D_qCvaCZhQQLnC-iz7XxFP3iWylf3RZWNsKUaw2MFU0c4Oiu3cbZIPM4AsgSSUVYlDzZKVgG-ldbaEt2vty-cqaHNqrIYNPjsN6n8gT5XbJPqEk5GJjjTfL61t5ugfaDtHjbskwoZm45x8xbWJgkilc8fZ70hWGr8tpskk_5P4G3dI9zy0-ZNTDF9R2nGknAjcmCT3cP5nKhL0YM8mhhbWxS7jTotR1A-hKBPRXbu-5tFa1W54F8k4Do17Wvhz_JNaj0EX-5z0BT8ryE6XPvsJd4vlQAAzwYKdy9oIL7KYzTiIy3vi7MicCg7opIc87ueczPBpZUv2vczrUzzOT-6Yczc9Ay2UPvzyS6SmB2QJI2gGXXvdRFZAElecn83X98psuIHAGx7xii7OplLOQLNaDN3o0tCt4v0e2mgnP8zU87MfUGMCgs-zJwCZYeJz-2rt1EHGGk0IuiiDJQ-R_X91KUE1Z76VOHOjBt_saj-UJ40dTB2w_ITArQa1dH2GhPZCz7wC4_UmwYlr1BHUiohA1ByDBHRB2cA8sBF5MU3s7F1KKWPQUcBQqf2NhQgUJTYWnvWUrgqdmvEKRVRiXwqlJiwGVc1_nCFUAOtzXqLtJAvT0mlKso-GUEPy6NPFjR-Yvv4ci_QFfhtUh87MyVYTEphY7xcNwTaswPqw=w652-h341-no)"]},{"cell_type":"markdown","metadata":{"id":"WeQkeSp9YTxA"},"source":["## numpy.amin"]},{"cell_type":"markdown","metadata":{"id":"tr0WYF7Co1ho"},"source":["Return the minimum of an array or minimum along an axis."]},{"cell_type":"code","execution_count":78,"metadata":{"id":"_-Ptumyjo0dT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716805928599,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"aafc0b1a-4b1b-42bb-f5a1-96dc5b57ce07"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2, 3],\n","       [4, 5, 6],\n","       [7, 8, 9]])"]},"metadata":{},"execution_count":78}],"source":["A"]},{"cell_type":"code","execution_count":79,"metadata":{"id":"et4d4RNIocCs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806016941,"user_tz":-540,"elapsed":561,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"6eea42e3-f188-40a2-853c-b187a89be76c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 3])"]},"metadata":{},"execution_count":79}],"source":["#np.amin(A, 0)\n","np.amin(A, axis=0)"]},{"cell_type":"code","execution_count":80,"metadata":{"id":"0jLWkPjdoyrB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806035129,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"11deed16-363c-4dc4-e34a-1673eb7b8ebb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 4, 7])"]},"metadata":{},"execution_count":80}],"source":["np.amin(A, 1)\n","# np.amin(A, axis=1)"]},{"cell_type":"code","execution_count":83,"metadata":{"id":"QBbjFJ6GpDCn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806102612,"user_tz":-540,"elapsed":3,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"0a9ca1c1-7fbc-40fd-e0c5-b5cf2cdcdc92"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":83}],"source":["np.amin(A)"]},{"cell_type":"markdown","metadata":{"id":"gMsPpdw1pCWC"},"source":["## numpy.amax"]},{"cell_type":"markdown","metadata":{"id":"Fqn9ZjeRpUgO"},"source":["Return the maximum of an array or maximum along an axis."]},{"cell_type":"code","execution_count":88,"metadata":{"id":"oAootx86qA5z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806129533,"user_tz":-540,"elapsed":653,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"3a79956e-e75b-4750-c958-8a5003d1e8ff"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2, 3],\n","       [4, 5, 6],\n","       [7, 8, 9]])"]},"metadata":{},"execution_count":88}],"source":["A"]},{"cell_type":"code","execution_count":89,"metadata":{"id":"ej2Se2iXpJpQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806131305,"user_tz":-540,"elapsed":1,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"01e05689-cb47-44f6-cb4a-a096cdfde92a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([7, 8, 9])"]},"metadata":{},"execution_count":89}],"source":["np.amax(A, 0)\n","# np.amax(A, axis=0)"]},{"cell_type":"code","execution_count":90,"metadata":{"id":"9sIDnzytpJna","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806152196,"user_tz":-540,"elapsed":524,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"55c4d9ef-64d3-47ff-9f37-79390dbb4262"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([3, 6, 9])"]},"metadata":{},"execution_count":90}],"source":["np.amax(A, 1)\n","# np.amax(A, axis=1)"]},{"cell_type":"code","execution_count":91,"metadata":{"id":"CL6YZbXSolnf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806152196,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"7dc29735-58f6-49eb-cdca-a6903117d996"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3,)"]},"metadata":{},"execution_count":91}],"source":["np.amax(A, 1).shape"]},{"cell_type":"code","execution_count":92,"metadata":{"id":"XKrEdPH1pJQj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806152645,"user_tz":-540,"elapsed":1,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"79886e9c-52b0-4c24-f910-8c932c49afe4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["9"]},"metadata":{},"execution_count":92}],"source":["np.amax(A)"]},{"cell_type":"markdown","metadata":{"id":"yVHIj1Iupnhf"},"source":["## numpy.ptp"]},{"cell_type":"markdown","metadata":{"id":"EFYuiVX4pxvj"},"source":["Range of values (maximum - minimum) along an axis.\n","\n","The name of the function comes from the acronym for ‘peak to peak’."]},{"cell_type":"code","execution_count":94,"metadata":{"id":"8VxGXuinp8kQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806230884,"user_tz":-540,"elapsed":3,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"bfc8e582-2dea-4132-e7fa-ade4fc7a752a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2, 3],\n","       [4, 5, 6],\n","       [7, 8, 9]])"]},"metadata":{},"execution_count":94}],"source":["A # 데이터가 매우 많을 때 데이터 개형이 어떻게 생겼는지 볼 때 쓴다."]},{"cell_type":"code","execution_count":95,"metadata":{"id":"Q6YNHrwOpzuZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806231388,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"77eb9d8d-896e-4cdd-8a34-7b3a332eda5e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([6, 6, 6])"]},"metadata":{},"execution_count":95}],"source":["np.ptp(A, 0) # (7-1), (8-2), (9-3)"]},{"cell_type":"code","execution_count":98,"metadata":{"id":"Xm14LIGdp6a3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806302447,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"ba81c872-bc58-477e-e89b-58c611a8b3be"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2, 2, 2])"]},"metadata":{},"execution_count":98}],"source":["np.ptp(A, 1) # (3-1), (6-4), (9-7)"]},{"cell_type":"code","execution_count":99,"metadata":{"id":"Z4QFXCVxp99u","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806311551,"user_tz":-540,"elapsed":364,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"7bbde1f3-62af-4c44-e1a1-2324094fca7d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{},"execution_count":99}],"source":["np.ptp(A) # (9-1)"]},{"cell_type":"markdown","metadata":{"id":"FoCO6OmSqUhW"},"source":["## numpy.median"]},{"cell_type":"markdown","metadata":{"id":"P-Eyf72Urhjz"},"source":["Compute the median along the specified axis."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Bi64JNDerJ7W"},"outputs":[],"source":["A"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ps-6IJLxrLTI"},"outputs":[],"source":["np.median(A, 0)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hsVht0ByrQN1"},"outputs":[],"source":["np.median(A, 1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SsqQsYZ1rU_N"},"outputs":[],"source":["np.median(A)"]},{"cell_type":"markdown","metadata":{"id":"OBi1rF4uqYaW"},"source":["## numpy.mean"]},{"cell_type":"markdown","metadata":{"id":"fxwp6vDBr0uO"},"source":["Compute the arithmetic mean along the specified axis.\n","\n","(가중평균을 구하려면 numpy.average를 사용해야 합니다.)"]},{"cell_type":"code","execution_count":100,"metadata":{"id":"sbY1nmGHseNT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806330743,"user_tz":-540,"elapsed":539,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"af5ee439-80a0-468a-c737-b49e50c1b6f1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2, 3],\n","       [4, 5, 6],\n","       [7, 8, 9]])"]},"metadata":{},"execution_count":100}],"source":["A"]},{"cell_type":"code","execution_count":101,"metadata":{"id":"WnFfddIZrdsT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806332780,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"637b48d5-bed4-4b5f-cbf6-dab3c6f22850"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([4., 5., 6.])"]},"metadata":{},"execution_count":101}],"source":["np.mean(A, 0)"]},{"cell_type":"code","execution_count":102,"metadata":{"id":"tNyK0HGXrdNp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806336442,"user_tz":-540,"elapsed":1,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"bf683536-8847-4ed8-a7a4-881d72efa4ba"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2., 5., 8.])"]},"metadata":{},"execution_count":102}],"source":["np.mean(A, 1)"]},{"cell_type":"code","execution_count":103,"metadata":{"id":"n79iGG5jrc1M","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806351160,"user_tz":-540,"elapsed":629,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"6a86e601-d50b-4884-bda1-8d5b6b23d203"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["5.0"]},"metadata":{},"execution_count":103}],"source":["np.mean(A)"]},{"cell_type":"markdown","metadata":{"id":"QtXO6zuuqYVa"},"source":["## numpy.var"]},{"cell_type":"markdown","metadata":{"id":"wPXmUNHmsxrp"},"source":["Compute the variance along the specified axis."]},{"cell_type":"code","execution_count":104,"metadata":{"id":"dSSXxSv7s_S0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806360740,"user_tz":-540,"elapsed":425,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"765946ff-418b-464b-a4b9-69be1405ba72"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([6., 6., 6.])"]},"metadata":{},"execution_count":104}],"source":["np.var(A, 0)"]},{"cell_type":"code","execution_count":105,"metadata":{"id":"0NMEX8w5s-6a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806386708,"user_tz":-540,"elapsed":638,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"135ffeb2-149c-486c-9681-413eb2be2148"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.66666667, 0.66666667, 0.66666667])"]},"metadata":{},"execution_count":105}],"source":["np.var(A, 1)"]},{"cell_type":"code","execution_count":106,"metadata":{"id":"LxQSe0JoqX5I","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806405657,"user_tz":-540,"elapsed":919,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"589e6562-eed2-46c6-b1c5-f2095d792f9b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["6.666666666666667"]},"metadata":{},"execution_count":106}],"source":["np.var(A)"]},{"cell_type":"markdown","metadata":{"id":"5s-Mj7H8tEUR"},"source":["## numpy.std"]},{"cell_type":"markdown","metadata":{"id":"enWqlt2rtHjV"},"source":["Compute the standard deviation along the specified axis."]},{"cell_type":"code","execution_count":107,"metadata":{"id":"kgMKCi3MtKdT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806409308,"user_tz":-540,"elapsed":361,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"fae3400f-6493-4ba1-cebe-5fef0d45c6c4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2.44948974, 2.44948974, 2.44948974])"]},"metadata":{},"execution_count":107}],"source":["np.std(A, 0)"]},{"cell_type":"code","execution_count":108,"metadata":{"id":"3Rm1-Cq0tKKM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806411691,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"fbc849b0-c405-48c7-b0d1-1795cebdbc78"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.81649658, 0.81649658, 0.81649658])"]},"metadata":{},"execution_count":108}],"source":["np.std(A, 1)"]},{"cell_type":"code","execution_count":109,"metadata":{"id":"yIfc_SX2tKEq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806413649,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"6d110b31-21a4-471d-e7e5-78fac016f0af"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["2.581988897471611"]},"metadata":{},"execution_count":109}],"source":["np.std(A)"]},{"cell_type":"markdown","metadata":{"id":"DAql9fTuYTr_"},"source":["# 다차원 배열 다루기 2\n","다차원 배열에서 일부분만 가져오거나 다차원 배열의 형태를 바꾸는 방법을 알아봅니다.\n","\n","https://docs.scipy.org/doc/numpy/reference/routines.array-manipulation.html"]},{"cell_type":"markdown","metadata":{"id":"YJOXeenmYTni"},"source":["## 슬라이싱"]},{"cell_type":"markdown","metadata":{"id":"UrUs0eyi12sY"},"source":["파이썬 리스트와 유사하게, Numpy 배열도 슬라이싱이 가능합니다.\n","\n","Numpy 배열은 다차원인 경우가 많기에, 각 차원별로 어떻게 슬라이스할건지 명확히 해야 합니다:\n","\n","Numpy 배열을 슬라이싱하면, 연속된 값을 가져오기에 결과로 얻어지는 배열은 언제나 원본 배열의 부분 배열입니다."]},{"cell_type":"code","execution_count":111,"metadata":{"id":"rSTklt9WuQj5","executionInfo":{"status":"ok","timestamp":1716806709114,"user_tz":-540,"elapsed":358,"user":{"displayName":"이도원","userId":"06437499916977662820"}}},"outputs":[],"source":["import numpy as np\n","\n","# shape가 (3, 4)인 2차원 배열 생성\n","# [[ 1  2  3  4]\n","#  [ 5  6  7  8]\n","#  [ 9 10 11 12]]\n","a = np.array([[1,2,3,4], [5,6,7,8], [9,10,11,12]])"]},{"cell_type":"markdown","metadata":{"id":"gvAMJaf9vPa7"},"source":["다차원배열은 아래와 같은 방법으로 슬라이싱 합니다."]},{"cell_type":"markdown","metadata":{"id":"osPEARhNvmFf"},"source":["`a[ : , : ]`\n","\n","\n","`a[행 슬라이싱 시작:행 슬라이싱 끝, 열 슬라이싱 시작:열 슬라이싱 끝]`\n","\n","\n","**시작값**부터 **끝값** <font color=\"red\">전</font>까지 슬라이싱 됩니다."]},{"cell_type":"code","execution_count":112,"metadata":{"id":"s6MPTZG2wmRW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716806712476,"user_tz":-540,"elapsed":583,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"959696ef-2147-4f28-dfd4-671fccbb268e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2, 3, 4],\n","       [5, 6, 7, 8]])"]},"metadata":{},"execution_count":112}],"source":["a[0:2, 0:4]"]},{"cell_type":"markdown","metadata":{"id":"1tA0TY58wrjf"},"source":["0행부터 2행 전까지(= 1행 까지), 0열부터 4열 전까지(= 3열 까지) 슬라이스되었습니다.\n","\n","시작값이 0인 경우 생략 가능하며 끝 값이 shape의 값과 동일한 경우 생략 가능합니다.\n","\n","`a[0:2, 0:4]`은 `a[:2, :]`로 표시할 수 있습니다."]},{"cell_type":"code","execution_count":114,"metadata":{"id":"sBVcKEPCwmNd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716807868091,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"ac92da58-298d-4476-ed20-6cce213ce270"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2, 3, 4],\n","       [5, 6, 7, 8]])"]},"metadata":{},"execution_count":114}],"source":["a[:2, :]"]},{"cell_type":"markdown","metadata":{"id":"He-aVrqQ3eBA"},"source":["위 코드는 열을 슬라이싱 하지 않는 코드이며 이런 경우 열 부분은 전체 생략 가능합니다.\n","\n","(행을 슬라이싱 하지 않는다고 하더라도, 행부분을 생략할 순 없습니다.)"]},{"cell_type":"code","execution_count":115,"metadata":{"id":"b7EOJsdkwmKb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716807868510,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"8b78843d-2838-48f4-9fe7-c79d3d905da4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2, 3, 4],\n","       [5, 6, 7, 8]])"]},"metadata":{},"execution_count":115}],"source":["a[:2]"]},{"cell_type":"markdown","metadata":{"id":"_DFoCzNO4dRr"},"source":["**슬라이싱에 익숙해지기 전까진 생략하지말고 명시적으로 코드를 작성해주는것이 실수를 방지하는 방법입니다.**"]},{"cell_type":"markdown","metadata":{"id":"o1fcIHf654TM"},"source":["## 인덱싱"]},{"cell_type":"markdown","metadata":{"id":"WzL4Xo-N6b4k"},"source":["인덱싱을 통해 원소에 접근할 수 있습니다.\n","\n","두 가지 표현법이 있습니다."]},{"cell_type":"code","execution_count":116,"metadata":{"id":"6P16QmWU6gLp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716807870938,"user_tz":-540,"elapsed":661,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"004c6c8b-413f-457f-f43e-57b7c5f3afca"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":116}],"source":["# 선호하는 방식\n","a[0, 0]"]},{"cell_type":"code","execution_count":118,"metadata":{"id":"wTKkLKLS6VTf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716807888053,"user_tz":-540,"elapsed":454,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"0dfff8c0-5869-44dd-92e5-0624f9608809"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":118}],"source":["a[0][0]"]},{"cell_type":"markdown","metadata":{"id":"mO7ZPlga57Yd"},"source":["Numpy 배열을 슬라이싱하면, 연속된 값을 가져오기에 결과로 얻어지는 배열은 언제나 원본 배열의 부분 배열입니다.\n","\n","그러나 인덱싱을 한다면, 연속하지 않은 값을 가져올 수 있으니 원본과 다른 배열을 만들 수 있습니다."]},{"cell_type":"code","execution_count":119,"metadata":{"id":"ajcFwt7b9G_Z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716807889644,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"24066250-eb9f-4454-c3bb-33ca95169912"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1,  2,  3,  4],\n","       [ 5,  6,  7,  8],\n","       [ 9, 10, 11, 12]])"]},"metadata":{},"execution_count":119}],"source":["a"]},{"cell_type":"code","execution_count":120,"metadata":{"id":"MX-MxYDl8eWr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716807890180,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"c91dfdc6-d901-4d78-de45-372a823b9503"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1,  2,  3,  4],\n","       [ 9, 10, 11, 12]])"]},"metadata":{},"execution_count":120}],"source":["# 0행, 2행만 인덱싱\n","a[[0, 2], ]"]},{"cell_type":"code","execution_count":122,"metadata":{"id":"4F_hYGty9Vag","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716808000121,"user_tz":-540,"elapsed":397,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"670eabfc-f2e2-4226-8d75-fcfe12686fe6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1,  2,  4],\n","       [ 5,  6,  8],\n","       [ 9, 10, 12]])"]},"metadata":{},"execution_count":122}],"source":["# 0열, 1열, 3열만 인덱싱\n","a[:, [0,1,3]]  # 행 생략 안됨"]},{"cell_type":"markdown","metadata":{"id":"nKciLNy_RLI5"},"source":["## 인덱싱&슬라이싱 - 차원"]},{"cell_type":"markdown","metadata":{"id":"QAObDpXdRQPQ"},"source":["정수 인덱싱과 슬라이싱을 혼합해서 사용하면 낮은 차원의 배열이 생성되지만,\n","\n","슬라이싱만 사용하면 원본 배열과 동일한 차원의 배열이 생성됩니다.\n","\n","0번째 행을 인덱싱하는 경우와 슬라이싱 하는 경우를 비교해보겠습니다."]},{"cell_type":"code","execution_count":123,"metadata":{"id":"OFo3Mmd4RP3w","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716808001871,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"e7d73de3-adf0-49a1-ba95-3cd781cbbc9b"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 1  2  3  4]\n"," [ 5  6  7  8]\n"," [ 9 10 11 12]] (3, 4) 2\n"]}],"source":["print(a, a.shape, a.ndim)"]},{"cell_type":"code","execution_count":126,"metadata":{"id":"qIZ1PgyySLVK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716808189258,"user_tz":-540,"elapsed":387,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"2530312f-4212-4129-d656-ecbb6539840c"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2 3 4]] (1, 4) 2\n"]}],"source":["# 슬라이싱만 사용, 처음엔 슬라이싱만 사용하는 게 좋음\n","slicedRow = a[0:1, :]\n","print(slicedRow, slicedRow.shape, slicedRow.ndim)"]},{"cell_type":"code","execution_count":129,"metadata":{"id":"ost9l4B1R8tw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716808194311,"user_tz":-540,"elapsed":2,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"4fcd0e5c-223d-42ce-c5cb-cf3803245b15"},"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4] (4,) 1\n","[1 2 3 4] (4,) 1\n"]}],"source":["# 아래와 동일한 코드\n","# 인덱싱&슬라이싱 혼합 사용\n","indexedRow = a[0]\n","print(indexedRow, indexedRow.shape, indexedRow.ndim)\n","\n","# 위와 동일한 코드\n","# 인덱싱&슬라이싱 혼합 사용\n","indexedRow2 = a[0, :]\n","print(indexedRow2, indexedRow2.shape, indexedRow2.ndim)"]},{"cell_type":"markdown","metadata":{"id":"OWuj2vu3TK6y"},"source":["행이 아닌 열의 경우에도 마찬가지 입니다."]},{"cell_type":"code","execution_count":130,"metadata":{"id":"ZcXhWBMTSERz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716808252787,"user_tz":-540,"elapsed":383,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"acc0347e-02cc-4086-e103-b47b92f34ecc"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[1]\n"," [5]\n"," [9]] (3, 1) 2\n"]}],"source":["# 슬라이싱만 사용\n","slicedCol = a[:, 0:1]\n","print(slicedCol, slicedCol.shape, slicedCol.ndim)"]},{"cell_type":"code","execution_count":131,"metadata":{"id":"Y09IJ9mFU4ct","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716808253349,"user_tz":-540,"elapsed":1,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"3405dea3-7c6f-490b-dfae-43182e71243b"},"outputs":[{"output_type":"stream","name":"stdout","text":["[1 5 9] (3,) 1\n"]}],"source":["# 인덱싱&슬라이싱 혼합 사용\n","indexedCol = a[:, 0]\n","print(indexedCol, indexedCol.shape, indexedCol.ndim)"]},{"cell_type":"markdown","metadata":{"id":"6AFtk8WmVbfc"},"source":["다차원배열간 연산에서 차원이 달라 문제가 발생하는 경우가 종종 있습니다.\n","\n","**특별히 인덱싱을 써야 하는 상황이 아니라면, 인덱싱보다 슬라이싱을 추천합니다.**"]},{"cell_type":"markdown","metadata":{"id":"2eLKR9auQK7m"},"source":["## 인덱싱&슬라이싱 - 값 복사&참조"]},{"cell_type":"markdown","metadata":{"id":"SQGaAAhFQQLx"},"source":["인덱싱은 값을 복사해옵니다. 복사된 값을 변경해도 원본의 값은 변하지 않습니다."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6__bo0VQQYmY"},"outputs":[],"source":["a"]},{"cell_type":"code","execution_count":132,"metadata":{"id":"4xtsM0d7P37t","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716808345636,"user_tz":-540,"elapsed":446,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"a21848ea-9f47-4045-8127-a38db1150a18"},"outputs":[{"output_type":"stream","name":"stdout","text":["a[0, 0]: 1\n","b: 100\n"]}],"source":["# 인덱싱해서 b에 대입, 값을 복사\n","b = a[0, 0]\n","\n","# b값 수정\n","b = 100\n","\n","print(\"a[0, 0]: {}\".format(a[0, 0]))\n","print(\"b: {}\".format(b))"]},{"cell_type":"markdown","metadata":{"id":"_JGPVOvtQ0gK"},"source":["슬라이싱된 배열은 원본 배열과 같은 데이터를 참조합니다.\n","\n","<font color=\"red\">즉 슬라이싱된 배열을 수정하면 원본 배열 역시 수정됩니다.</font>"]},{"cell_type":"code","execution_count":133,"metadata":{"id":"uqVFNX_zQAha","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716808346065,"user_tz":-540,"elapsed":1,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"1ae8e3e8-2a91-42cd-ec55-88a34be90241"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 6  7]\n"," [10 11]]\n"]}],"source":["# a를 슬라이스하여 c 생성\n","c = a[1:3, 1:3]\n","\n","print(c)"]},{"cell_type":"code","execution_count":135,"metadata":{"id":"Sn84SoasQEbx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716808406844,"user_tz":-540,"elapsed":660,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"87e0a834-93d1-4b45-8428-0f45efa06f70"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[100   7]\n"," [ 10  11]]\n","------------------\n","[[  1   2   3   4]\n"," [  5 100   7   8]\n"," [  9  10  11  12]]\n"]}],"source":["# c[0, 0]은 a[1, 1]과 같은 데이터입니다., 주소 복사\n","c[0, 0] = 100\n","\n","print(c)\n","print('------------------')\n","print(a)"]},{"cell_type":"markdown","source":["<h2>인덱싱은 값을 복사하고 슬라이싱은 주소를 복사한다.</h2>"],"metadata":{"id":"i5T2-IKWwqcD"}},{"cell_type":"markdown","metadata":{"id":"8HQJpEQA2wj2"},"source":["## 불리언 배열 인덱싱"]},{"cell_type":"markdown","metadata":{"id":"ZPR4ewXDaJaT"},"source":["불리언 배열 인덱싱을 통해 배열 속 요소를 취사선택할 수 있습니다. 불리언 배열 인덱싱은 특정 조건을 만족하게 하는 요소만 선택하고자 할 때 자주 사용됩니다."]},{"cell_type":"code","execution_count":136,"metadata":{"id":"w4xl1Vbz2y71","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716808554976,"user_tz":-540,"elapsed":757,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"892aa05d-9f8b-4e73-d6d9-ae5c0fd572b6"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2]\n"," [3 4]\n"," [5 6]]\n"]}],"source":["import numpy as np\n","\n","a = np.array([[1,2], [3, 4], [5, 6]])\n","\n","print(a)"]},{"cell_type":"code","execution_count":138,"metadata":{"id":"2caKbkRbbzVD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716808877541,"user_tz":-540,"elapsed":794,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"faf6cd54-f3fc-428a-c5f0-43945373d3ad"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[False False]\n"," [ True  True]\n"," [ True  True]]\n","[3 4 5 6]\n","[3 4 5 6]\n"]}],"source":["bool_idx = (a > 2)  # 2보다 큰 a의 요소를 찾습니다;\n","                    # 이 코드는 a와 shape가 같고 불리언 자료형을 요소로 하는 numpy 배열을 반환합니다,\n","                    # bool_idx의 각 요소는 동일한 위치에 있는 a의\n","                    # 요소가 2보다 큰지를 말해줍니다.\n","\n","print(bool_idx)      # 출력 \"[[False False]\n","                     #       [ True  True]\n","                     #       [ True  True]]\"\n","\n","# 불리언 배열 인덱싱을 통해 bool_idx에서\n","# 참 값을 가지는 요소로 구성되는\n","# rank 1인 배열을 구성할 수 있습니다.\n","print(a[bool_idx])  # 출력 \"[3 4 5 6]\"\n","\n","# 위에서 한 모든것을 한 문장으로 할 수 있습니다:\n","print(a[a > 2])     # 출력 \"[3 4 5 6]\""]},{"cell_type":"markdown","metadata":{"id":"orsL9GWLYTpQ"},"source":["## (참조) 정수 배열 인덱싱"]},{"cell_type":"code","execution_count":139,"metadata":{"id":"gmXzZ-IyxESh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716808881901,"user_tz":-540,"elapsed":414,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"629678aa-b5f8-4b56-a1d6-f31afd71da9e"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2]\n"," [3 4]\n"," [5 6]]\n"]}],"source":["import numpy as np\n","\n","a = np.array([[1,2], [3, 4], [5, 6]])\n","\n","print(a)"]},{"cell_type":"code","execution_count":140,"metadata":{"id":"OBq04jLFZRGn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716808882366,"user_tz":-540,"elapsed":1,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"d9b072db-737a-49b2-b376-cce2bdfbc7cc"},"outputs":[{"output_type":"stream","name":"stdout","text":["[1 4 5]\n","[1 4 5]\n","[2 2]\n","[2 2]\n"]}],"source":["# 정수 배열 인덱싱의 예.\n","# 반환되는 배열의 shape는 (3,)\n","print(a[[0, 1, 2], [0, 1, 0]])  # 출력 \"[1 4 5]\", (0,0), (1, 1), (2, 0)을 가져와라는 뜻\n","\n","# 위에서 본 정수 배열 인덱싱 예제는 다음과 동일합니다:\n","print(np.array([a[0, 0], a[1, 1], a[2, 0]]))  # 출력 \"[1 4 5]\"\n","\n","# 정수 배열 인덱싱을 사용할 때,\n","# 원본 배열의 같은 요소를 재사용할 수 있습니다:\n","print(a[[0, 0], [1, 1]])  # 출력 \"[2 2]\"\n","\n","# 위 예제는 다음과 동일합니다\n","print(np.array([a[0, 1], a[0, 1]]))  # 출력 \"[2 2]\""]},{"cell_type":"markdown","metadata":{"id":"p3t9TzIMX5bG"},"source":["## 전치(transpose)"]},{"cell_type":"markdown","metadata":{"id":"zFtuErBr3lN0"},"source":["종종 배열의 모양을 바꾸거나 데이터를 처리해야 할 때가 있습니다. 가장 간단한 예는 행렬의 주 대각선을 기준으로 대칭되는 요소끼리 뒤바꾸는 것입니다;\n","\n","이를 전치라고 하며 행렬을 전치하기 위해선, 간단하게 배열 객체의 ‘T’ 속성을 사용하면 됩니다:"]},{"cell_type":"code","execution_count":141,"metadata":{"id":"BpMXJuMb3nti","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716809099952,"user_tz":-540,"elapsed":406,"user":{"displayName":"이도원","userId":"06437499916977662820"}},"outputId":"049019c7-553a-4fb2-ef31-7a9432d0e63f"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[1 2]\n"," [3 4]]\n","[[1 3]\n"," [2 4]]\n","[1 2 3]\n","[1 2 3]\n"]}],"source":["import numpy as np\n","\n","x = np.array([[1,2], [3,4]])\n","print(x)    # 출력 \"[[1 2]\n","            #       [3 4]]\"\n","print(x.T)  # 출력 \"[[1 3]\n","            #       [2 4]]\"\n","\n","# 차원이 1인 배열을 전치할 경우 아무 일도 일어나지 않습니다:\n","v = np.array([1,2,3])\n","print(v)    # 출력 \"[1 2 3]\"\n","print(v.T)  # 출력 \"[1 2 3]\""]},{"cell_type":"markdown","metadata":{"id":"PLZ_crwrYmvQ"},"source":["## Shape 변경"]},{"cell_type":"markdown","metadata":{"id":"aflbVOpd708-"},"source":["### numpy.reshape"]},{"cell_type":"markdown","metadata":{"id":"XCMTsEvP7273"},"source":["Gives a new shape to an array without changing its data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"t8dR7iPqwgzA"},"outputs":[],"source":["np.arange(6)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sZabiDuswjzb"},"outputs":[],"source":["np.arange(6).reshape((3, 2))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"C5D6ux9P8ACt"},"outputs":[],"source":["a = np.arange(6).reshape((3, 2))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DLBAyj0K8Jgk"},"outputs":[],"source":["a"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VCg8dOLG5JC1"},"outputs":[],"source":["np.reshape(a, (2,3))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Dz_ffZkx5q-_"},"outputs":[],"source":["# 2차원\n","np.reshape(a, (1,6))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8lVoSmog5qkf"},"outputs":[],"source":["# 1차원\n","np.reshape(a, 6)"]},{"cell_type":"markdown","metadata":{"id":"LWmGFdPN8sHz"},"source":["### numpy.ravel()"]},{"cell_type":"markdown","metadata":{"id":"spkzJmkO80L6"},"source":["Return a contiguous flattened array."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IzmcXTCq5qaH"},"outputs":[],"source":["np.ravel(a)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qbsqbAJZ53jX"},"outputs":[],"source":["a.ravel()"]},{"cell_type":"markdown","metadata":{"id":"YZHKRyvk89wK"},"source":["### numpy.ndarray.flatten()"]},{"cell_type":"markdown","metadata":{"id":"5aABNEj89ERE"},"source":["Return a copy of the array collapsed into one dimension."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"V3IjMMqZ5Og5"},"outputs":[],"source":["# np.flatten(a) # Numpy 모듈 함수가 아님\n","a.flatten()     # ndarray 객체의 메소드로만 사용 가능"]},{"cell_type":"markdown","metadata":{"id":"7ZvKr7dS_MxT"},"source":["**ravel()과 flatten() 차이점**\n","- flatten은 객체의 매소드로만 사용 가능\n","- ravel()은 뷰를 반환, flatten은 복사본을 반환"]},{"cell_type":"markdown","metadata":{"id":"-e2xFxz9Ym87"},"source":["## 연결"]},{"cell_type":"markdown","metadata":{"id":"tHanj3jX37oT"},"source":["### numpy.concatenate"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"O67AqHaB3qqK"},"outputs":[],"source":["a = np.array([[1, 2], [3, 4]])\n","b = np.array([[5, 6]])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mvr_CL7C4EjK"},"outputs":[],"source":["np.concatenate((a, b), axis=0)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bMkQiBU0ySuX"},"outputs":[],"source":["a"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ffqEvbSqyUM9"},"outputs":[],"source":["a[0:1].T"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YwrtBYd54EUw"},"outputs":[],"source":["np.concatenate((a, b.T), axis=1)"]},{"cell_type":"markdown","metadata":{"id":"rVREocA94NhK"},"source":["### 참조"]},{"cell_type":"markdown","metadata":{"id":"d0JgPbk903Pi"},"source":["https://docs.scipy.org/doc/numpy/reference/routines.array-manipulation.html#joining-arrays"]},{"cell_type":"markdown","metadata":{"id":"NEfhcSP6Ym6r"},"source":["# 다차원 배열 연산"]},{"cell_type":"markdown","metadata":{"id":"QPREx67Z3B9K"},"source":["기본적인 수학함수는 배열의 각 요소별로 동작하며 연산자를 통해 동작하거나 numpy 함수모듈을 통해 동작합니다.\n","\n","다차원 배열간 연산시, **shape가 맞아야** 연산이 이루어집니다.\n","- 요소별 합, 차, 곱, 나눗셈의 경우 shape가 일치해야 합니다.\n","- dot의 경우 앞 배열의 열과 뒤 배열의 행의 크기가 일치해야 합니다.\n","\n","https://docs.scipy.org/doc/numpy/reference/routines.math.html"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KB6qg3SB3Bde"},"outputs":[],"source":["import numpy as np\n","\n","x = np.array([[1., 2.], [3., 4.]])\n","y = np.array([[5., 6.], [7., 8.]])\n","\n","# 요소별 합; 둘 다 다음의 배열을 만듭니다\n","# [[ 6.0  8.0]\n","#  [10.0 12.0]]\n","print(x + y)\n","print(np.add(x, y))\n","\n","# 요소별 차; 둘 다 다음의 배열을 만듭니다\n","# [[-4.0 -4.0]\n","#  [-4.0 -4.0]]\n","print(x - y)\n","print(np.subtract(x, y))\n","\n","# 요소별 곱; 둘 다 다음의 배열을 만듭니다\n","# [[ 5.0 12.0]\n","#  [21.0 32.0]]\n","print(x * y)\n","print(np.multiply(x, y))\n","\n","# 요소별 나눗셈; 둘 다 다음의 배열을 만듭니다\n","# [[ 0.2         0.33333333]\n","#  [ 0.42857143  0.5       ]]\n","print(x / y)\n","print(np.divide(x, y))\n","\n","# 요소별 제곱근; 다음의 배열을 만듭니다\n","# [[ 1.          1.41421356]\n","#  [ 1.73205081  2.        ]]\n","print(np.sqrt(x))"]},{"cell_type":"markdown","metadata":{"id":"dB_z-c6e3VOk"},"source":["Numpy에선 벡터의 내적, 벡터와 행렬의 곱, 행렬곱을 위해 `*`대신 `dot`함수를 사용합니다.\n","\n","`dot`은 Numpy 모듈 함수로서도 배열 객체의 메소드로서도 이용 가능한 합수입니다"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3PFt0rCE3Y_M"},"outputs":[],"source":["import numpy as np\n","\n","x = np.array([[1,2],[3,4]])\n","y = np.array([[5,6],[7,8]])\n","\n","v = np.array([9,10])\n","w = np.array([11, 12])\n","\n","# 벡터의 내적; 둘 다 결과는 219\n","print(v.dot(w))\n","print(np.dot(v, w))\n","\n","# 행렬과 벡터의 곱; 둘 다 결과는 dimension 1인 배열 [29 67]\n","print(x.dot(v))\n","print(np.dot(x, v))\n","\n","# 행렬곱; 둘 다 결과는 dimension 2인 배열\n","# [[19 22]\n","#  [43 50]]\n","print(x.dot(y))\n","print(np.dot(x, y))"]},{"cell_type":"markdown","metadata":{"id":"FlyVDye2Ymo7"},"source":["# NumPy 고급 기능"]},{"cell_type":"markdown","metadata":{"id":"clp8mtKH35Sm"},"source":["브로트캐스팅은 Numpy에서 shape가 다른 배열 간에도 산술 연산이 가능하게 하는 메커니즘입니다. 종종 작은 배열과 큰 배열이 있을 때, 큰 배열을 대상으로 작은 배열을 여러 번 연산하고자 할 때가 있습니다. 예를 들어, 행렬의 각 행에 상수 벡터를 더하는 걸 생각해보세요. 이는 다음과 같은 방식으로 처리될 수 있습니다:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Jt-LJxZS365d"},"outputs":[],"source":["import numpy as np\n","\n","# 행렬 x의 각 행에 벡터 v를 더한 뒤,\n","# 그 결과를 행렬 y에 저장하고자 합니다\n","x = np.array([[1,2,3], [4,5,6], [7,8,9], [10, 11, 12]])\n","# x =   \"[[1  2  3]\n","#         [4  5  6]\n","#         [7  8  9]\n","#         [10 11 12]]\"\n","\n","v = np.array([1, 0, 1])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mM8Ns-s27dcc"},"outputs":[],"source":["x"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-7qf8vW17gfh"},"outputs":[],"source":["v"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NlMN8-eD7itj"},"outputs":[],"source":["x.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mdTItwZH7khS"},"outputs":[],"source":["v.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VxaXYMf17oc3"},"outputs":[],"source":["y = np.empty_like(x)   # x와 동일한 shape를 가지며 비어있는 행렬 생성\n","\n","y"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ytOKGmgf7s8A"},"outputs":[],"source":["# 명시적 반복문을 통해 행렬 x의 각 행에 벡터 v를 더하는 방법\n","for i in range(4):\n","    y[i, :] = x[i, :] + v\n","\n","# 이제 y는 다음과 같습니다\n","# [[ 2  2  4]\n","#  [ 5  5  7]\n","#  [ 8  8 10]\n","#  [11 11 13]]\n","print(y)"]},{"cell_type":"markdown","metadata":{"id":"TS7aVqJH4AZd"},"source":["위의 방식대로 하면 됩니다; 그러나 `x`가 매우 큰 행렬이라면, 파이썬의 반복문을 이용한 위 코드는 매우 느려질 수 있습니다.\n","\n","벡터 `v`를 행렬 `x`의 각 행에 더하는 것은 `v`를 여러 개 복사해 수직으로 쌓은 행렬 `vv`를 만들고 이 `vv`를 `x`에 더하는것과 동일합니다.\n","\n","이 과정을 아래처럼 구현할 수 있습니다:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ALVbwRLD4EU5"},"outputs":[],"source":["import numpy as np\n","\n","# 벡터 v를 행렬 x의 각 행에 더한 뒤,\n","# 그 결과를 행렬 y에 저장하고자 합니다\n","x = np.array([[1,2,3], [4,5,6], [7,8,9], [10, 11, 12]])\n","v = np.array([1, 0, 1])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KjJQJFHR8MvE"},"outputs":[],"source":["vv = np.tile(v, (4, 1))   # v의 복사본 4개를 위로 차곡차곡 쌓은 것이 vv\n","\n","vv.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SftbRUUj8Ykc"},"outputs":[],"source":["print(vv)                 # 출력 \"[[1 0 1]\n","                          #       [1 0 1]\n","                          #       [1 0 1]\n","                          #       [1 0 1]]\"\n","y = x + vv  # x와 vv의 요소별 합\n","print(y)    # 출력 \"[[ 2  2  4\n","            #       [ 5  5  7]\n","            #       [ 8  8 10]\n","            #       [11 11 13]]\""]},{"cell_type":"markdown","metadata":{"id":"Q5fnf7ub4DNk"},"source":["Numpy 브로드캐스팅을 이용한다면 이렇게 v의 복사본을 여러 개 만들지 않아도 동일한 연산을 할 수 있습니다. 아래는 브로드캐스팅을 이용한 예시 코드입니다:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bCqCOn4l4NGD"},"outputs":[],"source":["import numpy as np\n","\n","# 벡터 v를 행렬 x의 각 행에 더한 뒤,\n","# 그 결과를 행렬 y에 저장하고자 합니다\n","x = np.array([[1,2,3], [4,5,6], [7,8,9], [10, 11, 12]])\n","v = np.array([1, 0, 1])\n","y = x + v  # 브로드캐스팅을 이용하여 v를 x의 각 행에 더하기\n","print(y)  # 출력 \"[[ 2  2  4]\n","          #       [ 5  5  7]\n","          #       [ 8  8 10]\n","          #       [11 11 13]]\""]},{"cell_type":"markdown","metadata":{"id":"0YKozO6EBgEQ"},"source":["(강의 처음에 나온, 수학점수 다차원 배열에 +1 한 코드도 사실은 브로드캐스팅이었습니다!)"]},{"cell_type":"markdown","metadata":{"id":"Xz6ed7rh4TjN"},"source":["x의 shape가 (4, 3)이고 v의 shape가 (3,)라도 브로드캐스팅으로 인해 y = x + v는 문제없이 수행됩니다.\n","\n","이때 `v`는 `v`의 복사본이 차곡차곡 쌓인 shape (4, 3)처럼 간주되어 `x`와 동일한 shape가 되며 이들 간의 요소별 덧셈연산이 y에 저장됩니다.\n","\n","두 배열의 브로드캐스팅은 아래의 규칙을 따릅니다:\n","\n","1. 두 배열이 동일한 dimension을 가지고 있지 않다면, 낮은 dimension의 1차원 배열이 높은 dimension 배열의 shape로 간주합니다.\n","2. 특정 차원에서 두 배열이 동일한 크기를 갖거나, 두 배열 중 하나의 크기가 1이라면 그 두 배열은 특정 차원에서 compatible하다고 여겨집니다.\n","3. 두 행렬이 모든 차원에서 compatible하다면, 브로드캐스팅이 가능합니다.\n","4. 브로드캐스팅이 이뤄지면, 각 배열 shape의 요소별 최소공배수로 이루어진 shape가 두 배열의 shape로 간주합니다.\n","5. 차원에 상관없이 크기가 1인 배열과 1보다 큰 배열이 있을 때, 크기가 1인 배열은 자신의 차원 수만큼 복사되어 쌓인 것처럼 간주합니다."]},{"cell_type":"markdown","metadata":{"id":"ngKciAsj4bM-"},"source":["브로드캐스팅을 지원하는 함수를 universal functions라고 합니다.\n","\n","https://docs.scipy.org/doc/numpy/reference/ufuncs.html\n","\n","브로드캐스팅을 응용한 예시들입니다:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"y3rAVEb34d03"},"outputs":[],"source":["import numpy as np\n","\n","v = np.array([1,2,3])  # v의 shape는 (3,)\n","w = np.array([4,5])    # w의 shape는 (2,)\n","x = np.array([[1,2,3],\n","              [4,5,6]])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YybmNf-Uynmr"},"outputs":[],"source":["print(x)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2Nl3kWPTyuha"},"outputs":[],"source":["# 벡터를 행렬의 각 행에 더하기\n","# x는 shape가 (2, 3)이고 v는 shape가 (3,)이므로 이 둘을 브로드캐스팅하면 shape가 (2, 3)인\n","# 아래와 같은 행렬이 나옵니다:\n","# [[2 4 6]\n","#  [5 7 9]]\n","print(x + v)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fOq_hbEW993m"},"outputs":[],"source":["x.T"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-kkH3_069_sa"},"outputs":[],"source":["w"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OY6jCvOF-Cls"},"outputs":[],"source":["x.T + w"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Sn8mkBYE-HaZ"},"outputs":[],"source":["(x.T + w).T"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"R1sGvZNnyyWm"},"outputs":[],"source":["# 벡터를 행렬의 각 행에 더하기\n","# x는 shape가 (2, 3)이고 w는 shape가 (2,)입니다.\n","# x의 전치행렬은 shape가 (3,2)이며 이는 w와 브로드캐스팅이 가능하고 결과로 shape가 (3,2)인 행렬이 생깁니다;\n","# 이 행렬을 전치하면 shape가 (2,3)인 행렬이 나오며\n","# 이는 행렬 x의 각 열에 벡터 w을 더한 결과와 동일합니다.\n","# 아래의 행렬입니다:\n","# [[ 5  6  7]\n","#  [ 9 10 11]]\n","print((x.T + w).T)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"O8flNn3d-csG"},"outputs":[],"source":["w"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IS1AtfzQ-ege"},"outputs":[],"source":[" np.reshape(w, (2, 1))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"buxpt-e7yx5E"},"outputs":[],"source":["# 다른 방법은 w를 shape가 (2,1)인 열벡터로 변환하는 것입니다;\n","# 그런 다음 이를 바로 x에 브로드캐스팅해 더하면\n","# 동일한 결과가 나옵니다.\n","print(x + np.reshape(w, (2, 1)))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Dg-XjQ8EyxqD"},"outputs":[],"source":["# 행렬의 스칼라배:\n","# x 의 shape는 (2, 3)입니다. Numpy는 스칼라를 shape가 ()인 배열로 취급합니다;\n","# 그렇기에 스칼라 값은 (2,3) shape로 브로드캐스트 될 수 있고,\n","# 아래와 같은 결과를 만들어 냅니다:\n","# [[ 2  4  6]\n","#  [ 8 10 12]]\n","print(x * 2)"]},{"cell_type":"markdown","metadata":{"id":"7nq1PTCS4lyk"},"source":["브로드캐스팅은 보통 코드를 간결하고 빠르게 해줍니다, 그러니 가능한 많이 사용하세요."]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":["JPq9Zh8Ekg9n"],"provenance":[{"file_id":"1ASRhsZArduVXAIpHUn05yND2FWZk17Zm","timestamp":1549878177704}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}